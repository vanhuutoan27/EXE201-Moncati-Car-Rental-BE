// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoncatiCar.Data;

#nullable disable

namespace MoncatiCar.Data.Migrations
{
    [DbContext(typeof(MocatiContext))]
    [Migration("20240926080104_UpdateContractTable")]
    partial class UpdateContractTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("AppUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("9d7e87a9-b070-4607-a0b0-2d2322aece9b")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("0075ba2c-f60d-4f75-b9f1-f71579bc4fd2")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("3b1a8845-765f-4d91-984a-4e8a9d7d376e")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("1246b8e5-af73-4aa3-bdef-b8815e21a78b")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("8f3dbc12-27b8-49ac-8049-c67e065ce7c0")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Address", b =>
                {
                    b.Property<Guid>("addressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addressName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("commune")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.Property<string>("locationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("addressId");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Brand", b =>
                {
                    b.Property<Guid>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = new Guid("c6669c8e-f8a8-443c-8446-83c010b44ec0"),
                            BrandName = "Mazda",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A Japanese automaker known for its stylish designs, advanced technology, and driving pleasure. Mazda’s “Kodo” design philosophy and SkyActiv technology are key highlights.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("a1f14e7e-342b-4f17-b7fc-9e7ca13483b2"),
                            BrandName = "Vinfast",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A Vietnamese car manufacturer that quickly gained attention for its electric and gasoline vehicles. VinFast aims to bring Vietnamese-made cars to the global market with a focus on quality and innovation.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("de716878-747e-4b02-9fce-46d67a13c30f"),
                            BrandName = "Peugeot",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A French car brand with a long history, known for producing elegant and reliable vehicles. Peugeot is recognized for its sophisticated design, comfort, and European flair.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("9bb29e7a-ca23-4418-81d4-b9b66e7cf107"),
                            BrandName = "Ford",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An American automaker famous for its durable vehicles, including the iconic Ford Mustang and F-Series trucks. Ford has a significant influence on the global automotive industry.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("1c38dc33-e4d6-4922-abc4-1fa8cfc314b2"),
                            BrandName = "Lexus",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The luxury division of Toyota, Lexus is renowned for its refined craftsmanship, advanced technology, and smooth, comfortable rides. It’s a symbol of reliability and premium quality.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("c11c6f51-c207-4754-9372-046fb4a04c22"),
                            BrandName = "Hyundai",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A South Korean car manufacturer that offers a wide range of vehicles, known for their affordability, modern designs, and advanced features. Hyundai has rapidly grown to become a major global player.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("b802da6e-e178-46f5-9884-442e0f1067dc"),
                            BrandName = "Mg",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Originally a British brand, now owned by Chinese automaker SAIC. MG is known for affordable vehicles with a focus on modern technology and youthful appeal.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("4e5784bd-10a3-4fb4-ad50-fb0304da90d9"),
                            BrandName = "Toyota",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "One of the largest and most reliable car manufacturers in the world. Toyota is known for its long-lasting vehicles, efficiency, and innovations like hybrid technology with models like the Prius.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Car", b =>
                {
                    b.Property<Guid>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DeliveryFeePerKm")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FreeDeliveryWithinKm")
                        .HasColumnType("int");

                    b.Property<float?>("FuelConsumption")
                        .HasColumnType("real");

                    b.Property<int>("FuelType")
                        .HasColumnType("int");

                    b.Property<bool?>("InstantBooking")
                        .HasColumnType("bit");

                    b.Property<int?>("LimitKilometersPerDay")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxDeliveryDistance")
                        .HasColumnType("int");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("OverLimitFeePerKm")
                        .HasColumnType("int");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RentalStatus")
                        .HasColumnType("int");

                    b.Property<string>("RentalTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Transmission")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("discount")
                        .HasColumnType("real");

                    b.Property<string>("licensePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("CarTypeId");

                    b.HasIndex("ModelId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 10,
                            Description = "Mazda CX5 2017-2.0 Fuel efficient<br/>New, beautiful car, regularly maintained, clean…<br/>Spacious, comfortable car, suitable for family travel.<br/>Car has rear camera, sunroof, dash cam, entertainment system and many other amenities…",
                            FreeDeliveryWithinKm = 5,
                            FuelConsumption = 7f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 100,
                            Location = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 10,
                            ModelId = new Guid("0ed1b055-dcd4-48ee-aeff-7478382f9e96"),
                            OverLimitFeePerKm = 200,
                            OwnerId = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87"),
                            PricePerDay = 861000m,
                            RentalStatus = 0,
                            Seats = 4,
                            Slug = "mazda-cx5-deluxe-2017-vq57kp",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 20f,
                            licensePlate = "15A-341.79",
                            year = 2017
                        },
                        new
                        {
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 10,
                            Description = "Beautiful new family car, original interior, clean, equipped with 3M crystalline film, the car is very cool in hot weather, coated with anti-nail and noise-proof tires.<br/>",
                            FreeDeliveryWithinKm = 10,
                            FuelConsumption = 381f,
                            FuelType = 2,
                            InstantBooking = false,
                            LimitKilometersPerDay = 200,
                            Location = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("f660d2b0-0444-4c02-b15a-2ebc871d8f4b"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87"),
                            PricePerDay = 953000m,
                            RentalStatus = 1,
                            Seats = 5,
                            Slug = "vinfast-vf6-plus-2024-j7tjxw",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 15f,
                            licensePlate = "51L-216.13",
                            year = 2024
                        },
                        new
                        {
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 0,
                            Description = "Great car! Very comfortable and spacious for my family trip",
                            FreeDeliveryWithinKm = 0,
                            FuelConsumption = 10f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 1, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 1, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("4e39763c-501a-47ea-9d11-f884de1e7e4e"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87"),
                            PricePerDay = 1343000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "peugeot-3008-2022-wlh7hm",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 0f,
                            licensePlate = "51K-418.61",
                            year = 2022
                        },
                        new
                        {
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 0,
                            Description = "The car is in excellent condition and very clean. Highly recommended!",
                            FreeDeliveryWithinKm = 0,
                            FuelConsumption = 9f,
                            FuelType = 0,
                            InstantBooking = true,
                            LimitKilometersPerDay = 50,
                            Location = "Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
                            LocationDetails = "Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 7,
                            ModelId = new Guid("1dc0a8e3-19b1-45f0-aec8-a810722de8f5"),
                            OverLimitFeePerKm = 100,
                            OwnerId = new Guid("9d7e87a9-b070-4607-a0b0-2d2322aece9b"),
                            PricePerDay = 666000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "ford-ecosport-2015-duz4bh",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 0f,
                            licensePlate = "51F-320.56",
                            year = 2015
                        },
                        new
                        {
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 10,
                            Description = "Lexus RX 450h automatic transmission manufactured in 2010 Japan<br/>Last inspection date: 7/7/2023<br/>Clean and tidy family car",
                            FreeDeliveryWithinKm = 5,
                            FuelConsumption = 7f,
                            FuelType = 0,
                            InstantBooking = true,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 2, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 2, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("32234d9d-90f2-4011-ba7f-85ead67a98bd"),
                            OverLimitFeePerKm = 150,
                            OwnerId = new Guid("9d7e87a9-b070-4607-a0b0-2d2322aece9b"),
                            PricePerDay = 3706000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "lexus-rx450h-2010-4urh11",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 0f,
                            licensePlate = "51A-900.56",
                            year = 2010
                        },
                        new
                        {
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 10,
                            Description = "Safety:\nHyundai Creta has familiar features such as: ABS – EBD – BA brakes, electronic balance, traction control, hill start assist, tire pressure sensor, parking assist sensor, rear camera, 6 airbags…<br/>Convenience: Leather seats, Bose standard sound system, navigation, speed warning, electronic handbrake…",
                            FreeDeliveryWithinKm = 5,
                            FuelConsumption = 6f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 9, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 9, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("fdfdef71-0e39-48f0-8eec-71f5429ed285"),
                            OverLimitFeePerKm = 150,
                            OwnerId = new Guid("0075ba2c-f60d-4f75-b9f1-f71579bc4fd2"),
                            PricePerDay = 1033000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "hyundai-creta-2022-wesu5v",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 0f,
                            licensePlate = "51K-392.51",
                            year = 2022
                        },
                        new
                        {
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 15,
                            Description = "Comfortable 5-seater car, beautiful car, strong engine, full interior and amenities",
                            FreeDeliveryWithinKm = 7,
                            FuelConsumption = 7f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 2, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 2, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 4,
                            ModelId = new Guid("16fd3123-d971-422c-b2af-e47978c27f35"),
                            OverLimitFeePerKm = 100,
                            OwnerId = new Guid("0075ba2c-f60d-4f75-b9f1-f71579bc4fd2"),
                            PricePerDay = 1073000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "hyundai-tucson-premium-2021-nixl5v",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 10f,
                            licensePlate = "30K-605.01",
                            year = 2021
                        },
                        new
                        {
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 0,
                            Description = "The 2021 PEUGEOT 2008 GT is a stylish and compact SUV featuring a sporty design, advanced technology, and efficient engine options. It offers a comfortable and spacious interior with premium materials, making it ideal for urban driving and longer journeys",
                            FreeDeliveryWithinKm = 0,
                            FuelConsumption = 5f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 0,
                            Location = "Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
                            LocationDetails = "Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("affeb1d2-7eb3-4410-a7ca-e3b1adc3cc54"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d"),
                            PricePerDay = 1101000m,
                            RentalStatus = 0,
                            Seats = 4,
                            Slug = "peugeot-2008-gt-2022-x5uac6",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 0f,
                            licensePlate = "51H-815.11",
                            year = 2021
                        },
                        new
                        {
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 20,
                            Description = "The 2021 GARAGES ZS SMART UP STANDARD is a compact SUV designed for urban driving. It features a modern exterior with sleek lines, a spacious and well-equipped interior, and smart technology integration. The vehicle offers a smooth ride with fuel-efficient engine options, making it a practical choice for everyday use.",
                            FreeDeliveryWithinKm = 0,
                            FuelConsumption = 4f,
                            FuelType = 0,
                            InstantBooking = true,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 9, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 9, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("542d93fd-4bc2-48df-9e58-f12c17a96d79"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d"),
                            PricePerDay = 976000m,
                            RentalStatus = 0,
                            Seats = 4,
                            Slug = "mg-zs-standard-2022-k18fhr",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 0f,
                            licensePlate = "21A-134.52",
                            year = 2022
                        },
                        new
                        {
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 0,
                            Description = "The 2021 Toyota Innova E is a versatile and reliable MPV designed for family comfort and practicality. It boasts a spacious interior with ample seating and cargo space, advanced safety features, and a smooth driving experience.",
                            FreeDeliveryWithinKm = 8,
                            FuelConsumption = 9f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 150,
                            Location = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 5,
                            ModelId = new Guid("6e18d51e-2964-4f16-a00c-0d4544671816"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d"),
                            PricePerDay = 821000m,
                            RentalStatus = 0,
                            Seats = 7,
                            Slug = "toyota-innova-2020-3ymd75",
                            Status = true,
                            Transmission = 0,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 20f,
                            licensePlate = "51L-288.32",
                            year = 2020
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CarFeature", b =>
                {
                    b.Property<Guid>("CarFeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CarFeatureId");

                    b.HasIndex("CarId");

                    b.HasIndex("FeatureId");

                    b.ToTable("CarFeatures");

                    b.HasData(
                        new
                        {
                            CarFeatureId = new Guid("458989c4-948a-4d6f-bb77-229454164529"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("dd7ba97c-01f5-450b-ade1-2344439fa7c7"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d3d93963-ed65-4247-972b-0afa3667f654"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("786d16e9-fc84-4a53-9070-caac0d1fb12a"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("8ebc0ba3-1ab1-4136-b5bf-efb77afa4919"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a43f9323-a175-48b6-9fe0-238e592a1bec"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a8b5709f-130c-4bc8-9914-639fa8b096f4"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9e0e45a0-b8d1-472e-8e29-e980b1026fbe"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("76ab5e31-ba63-46b2-b312-34542a263b53"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b62fd9cf-f1b3-4a65-841b-23f6515f7a80"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("eb6820c4-d294-49e9-8404-bc482afe597a"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("afd7494b-3b0a-4c19-91d8-3cabd26b6f19"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("42e4e493-e6d2-46b4-a792-321b638acbe8"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("dd298810-8387-4963-bcb3-9c5b5d61c2c5"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("3b0b0210-d655-4097-8015-b8be0c3f559c"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e729d1e0-2ce3-4ba7-858d-892d92040471"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ceed4692-d63f-4b96-8eb8-de8fbb071031"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9849134a-7a01-4770-a16f-b8fde41ff42f"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b6b5810d-8af3-4378-b8ca-51a44b17a4ac"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("067f667a-f837-451a-80be-b656092c46ef"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("81346623-d891-4472-ad4f-9e98320a464e"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9ac4f19b-5c38-4540-bc34-03c597b1e0f5"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("1648bddf-135c-43bb-b8fa-469d1aedbb4f"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a4675e17-28f7-4f8b-8617-22ec20c196ab"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c88ac067-6e6a-4cd0-a7ce-3bce4a524348"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("15af1de8-f681-4025-97cb-88b929b243f5"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("63ca3c78-521b-435c-b3e5-32670719518a"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("296c54ad-b451-460c-a582-65baa012017e"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e0b9188f-c529-4f17-a3e0-335aa41b871b"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("960c66d7-40e1-401d-a2ee-4c1ba8bbac1a"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("4c107cf6-f1ca-4c7b-afb7-5bb0360a4ecf"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fa3088fa-7f9e-475b-9011-f429f97670e3"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d989a3dc-c47b-4a3a-b1d6-319be6292b51"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a9aaec7e-6a50-4d67-b748-c0f12971be36"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("89afbc38-d45c-4335-a040-271237706f57"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("49c0cc8a-2c3b-4732-bb8c-371b2325b44f"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d58e3903-cffe-42d4-9658-f705ba3be5b8"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d")
                        },
                        new
                        {
                            CarFeatureId = new Guid("37d6681f-2773-4e34-afa4-bc33d72534fa"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("07cededd-6eac-4331-a387-bd81ca1e83ec"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("cd20a912-ddc3-4b5e-aec2-e418005827d5"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b5477e3f-09de-4a51-bcca-e0b3ad9a438f"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("7a93cd66-33a5-4b25-a6e5-e3cd91ae2483"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c840f944-8582-43b1-9ad6-074157d23210"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("74adf8bd-2c8a-4927-a83e-5aef5e917694"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("332f2713-2644-488e-82f1-f1696195c652"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ce760028-8655-4433-81a6-99978063fc25"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("32a985b5-b4fd-4f02-a65e-b20c12160ab5"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a4960b5c-5031-4fdc-9a8d-2a71d76a01ac"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("937b233f-9fb6-4ee2-8809-dd0be93bb564"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("0383aa76-9e0f-43ab-815a-503740d4ea67"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("eea57663-ee75-4620-bb43-d8693ed9bada"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("4365445e-06e6-4bf2-8034-548320a77553"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("18300fd0-83f9-49ad-89c3-249aeaa14c5b"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c201d438-eff3-4b76-97af-721f0b673aa8"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("798553b8-c5f4-443b-8722-d710a48af0c9"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("5007d6e8-baca-4cad-a3f6-ecfdb088d49b"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d4a86008-2dd2-411b-808d-161af05fa72c"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("5138eebf-173a-49d9-8ca7-11d7950622ae"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("7c314a98-87e3-47a2-aab5-3ca42e0d536a"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d6e2508f-8b6e-46b6-98d4-964c42aae2f9"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("3b2307c5-ccd5-4665-b5cc-b216283d057a"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d202f8ba-c31c-4f8d-980b-2611350fa2ef"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("dc8fd8cb-25cd-468f-a741-682880c40156"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("3d61af14-4232-4f34-961c-4cb5828252e3"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6454fc57-55c1-452c-afc1-6ac14baa2b10"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("567fa91e-d7d7-4e3c-80f4-66adab66eb19"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e36309d0-2a4f-4386-9f29-8cc9999de5df"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("324bc1dc-7838-4152-b032-1b3717991104"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ce6b464d-f01d-4668-b9a5-735452ffb71c"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fd9000a2-f363-43af-8f48-68a2eadf0d24"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("978bc9d7-d63a-487b-9506-d1832abfc1c7"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e4b4aab8-4eb8-4055-b3dd-fefb7aec65e6"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c85d57d8-2f54-4874-ae23-78f900ef86ae"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9793d5bf-3d21-4f97-bc60-f478bb411a3c"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c00b8130-91fb-43e6-b059-6c2fabd7aef0"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d")
                        },
                        new
                        {
                            CarFeatureId = new Guid("7abc20cf-cfe4-420a-9a49-22b9fe1e2294"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("989399fa-9853-4b49-88f9-9dcd08fd9706"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("db177da1-b81c-437a-8819-0aef4ce362e9"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("777ea0cf-1369-4619-a99e-b5110959b987"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("0e3b35b1-d4c3-496b-a481-e9df55f896d5"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("6ebf1d36-35fa-4cad-9d6f-671476d02020")
                        },
                        new
                        {
                            CarFeatureId = new Guid("be6942c2-02ca-461b-ae1b-b3374b1393a2"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("759dd2f6-7fc3-4ecf-85ca-dfb8b5754fb8"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("1c1d9ac1-485e-4792-9bc4-4718d4e6bb0f"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("4212c042-5e63-4d36-a9c1-8ff983dbc3b8"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("4d89b1b0-2550-4136-93df-16e9ae0f06f7"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("20814e20-d4b3-4d98-ab2f-45f1fec3ae54"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("319a6ea8-7301-44be-94b1-f4a886573b55"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fb608ebb-2455-465a-83d0-e8505f83bcb0"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("491b0f1a-da60-4e00-a8d5-7ef5cf3af264"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6f7c04dc-1d81-4c0b-ab97-cd0ab9b9a750"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("bcbfd934-8fdc-46ff-9a33-690a13613a7f"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("841c5ca2-aa92-4291-96d7-505b86c1c9bf"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("2cc480be-696b-4557-b047-4ad966b39cd1"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("bf608cb1-666d-4df6-93a1-a94ba070e01c"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("20abec5d-d058-4612-bbd7-4064ff58c1df"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6b488e54-42f9-44e7-bf3a-46814044efbe"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c91be899-7615-4dc3-86ff-cedb635c8ce1"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6129f44b-58ea-495c-a2fc-5006ba257d17"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("cd6f43f8-9c99-4e4f-895d-3d23a26a62a3"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("8ae5147b-c92a-4a35-a7a1-dcc3cd681127"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6e08e318-a31c-49f9-a8b7-5fda8ae3794c"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("afbd832f-ede7-41a9-b4ad-0d215e4c83a7"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fa46ba5c-0487-4663-b5d1-b1628ce91179"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("52239970-405f-4064-ac0a-0c6a4c9da2ef"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d2896780-dea4-4769-a5ec-17112f3677e6"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("f569f45f-a1c7-47eb-8c0d-e44e348a7222"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("0eb65dae-1e6a-4c0a-8475-25b202346e18"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("af5ac078-2fff-4090-86b0-c25d7d83deed"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a23d0028-94bf-4a5f-91c1-fe2068ba751d"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9f0faf43-f58d-4013-94ee-e8ae9331a645"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b42bd488-29bc-4f6e-9316-42a89ee8ca40"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("f27cebe6-86be-4d77-ba53-2798d5a61d5a"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a61c0d8e-f9f1-48b3-bf11-9150f4869b8c"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("1cf48342-2d00-4399-88b9-2ef00f261bac"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("7729471e-f190-4ee9-92a0-d42b07e9cca7"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ffa68482-b05d-4197-a3b5-561e0cb185a7"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("989a1337-c022-4343-81dd-2f5ba1e1fb7f"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("bacf1384-06c3-4515-9c42-559c886aecfc"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("965360cb-ca87-4b3f-be3a-0b50ca84b972"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("1e1efa40-c328-4238-99ff-254d4eb6a7e0"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9accf38f-8446-4a9d-a54e-c80e87cda818"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("849a39f3-6dc8-436f-983d-c6d4958ceb26"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("cafacdcf-f54c-4b43-b16f-a4a7e01a8ca3"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("845037d9-ef1b-47c0-8efe-597c40d0fd0a"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("3c1aad26-ae66-4e9f-b283-16b484c4c291"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b8645fb2-0826-4884-82fd-ab546d3bbfc9"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e7fe58a5-0b48-47e3-a02d-61c170cdcdfe"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("00b48370-c64e-4877-b83f-9f1ff0779205"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b2bd9595-f43f-49de-b3a1-bb7fc0e72137"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("30521942-e87f-4305-b052-87d9df0dd667"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("8d14d468-bc88-4557-86bb-8de8c3dd3d20"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("56090c0c-ed0f-40c6-8fec-2b31d8c652d1"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("bbbb6520-f1c4-4163-b8ff-0ca22a7f2800"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("998f4106-4799-466a-8674-2c1787dfbff7"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("dc80ed5c-4a44-486a-9dd1-64f32b792707"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b5f3dddc-6784-4ba3-abba-f012ffb42103"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d968c829-9710-41c6-ad91-3507226ae23d"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CarType", b =>
                {
                    b.Property<Guid>("CarTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CarTypeId");

                    b.ToTable("CarTypes");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CitizenId", b =>
                {
                    b.Property<Guid>("Citizen_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IssuingAuthority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Verified")
                        .HasColumnType("bit");

                    b.HasKey("Citizen_Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("CitizenIds");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Contract", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RentalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Signature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContactId");

                    b.HasIndex("RentalId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.DrivingLicense", b =>
                {
                    b.Property<Guid>("DrivingLicenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Verified")
                        .HasColumnType("bit");

                    b.HasKey("DrivingLicenseId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("DrivingLicenses");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.FavoriteCar", b =>
                {
                    b.Property<Guid>("FavoriteCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FavoriteCarId");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("FavoriteCars");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Feature", b =>
                {
                    b.Property<Guid>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FeatureId");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Provides real-time navigation and location tracking while driving",
                            DisplayName = "Map",
                            FeatureName = "map",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fmap-icon.png?alt=media&token=ebf5968e-074f-4f5f-a20c-9020b5dfac7b",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enables wireless connection for hands-free calls and audio streaming",
                            DisplayName = "Bluetooth",
                            FeatureName = "bluetooth",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fbluetooth-icon.png?alt=media&token=422658da-d565-46e6-9e8f-b0ffccbb77dd",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Offers a 360-degree view around the vehicle for safer maneuvering",
                            DisplayName = "Camera 360",
                            FeatureName = "camera360",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2F360_camera-icon.png?alt=media&token=12ef3912-ad25-4216-9d8a-aa3a10f3d956",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Assists in parking by displaying rearview visuals on the screen",
                            DisplayName = "Parking Camera",
                            FeatureName = "parkingCamera",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fparking_camera-icon.png?alt=media&token=39675fd9-2e15-4275-a7e1-085a75fb491f",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Records front road footage for safety and evidence during drives",
                            DisplayName = "Dash Camera",
                            FeatureName = "dashCamera",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fdash_camera-icon.png?alt=media&token=e863e966-7ce5-432f-9629-bd72fcdfcd1f",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Displays rear visuals to aid in reversing safely",
                            DisplayName = "Reverse Camera",
                            FeatureName = "reverseCamera",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Freverse_camera-icon.png?alt=media&token=fff470fe-095c-4b9e-ac98-aa31827a6f91",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Monitors tire pressure to ensure optimal driving safety",
                            DisplayName = "Tire Pressure Monitor",
                            FeatureName = "tirePressureMonitor",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Ftpms-icon.png?alt=media&token=5d93995e-c886-430c-843b-a80fb6ba3f46",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Detects collisions and triggers safety mechanisms during impacts",
                            DisplayName = "Impact Sensor",
                            FeatureName = "impactSensor",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fimpact_sensor-icon.png?alt=media&token=1bc9001d-e5ca-4f48-98f8-dc86934cebc0",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Projects essential driving information onto the windshield",
                            DisplayName = "Head Up",
                            FeatureName = "headUp",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fhead_up-icon.png?alt=media&token=63087d56-26a4-4f72-affc-3c5d55c33f31",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Provides an open roof option for natural light and ventilation",
                            DisplayName = "Sun Roof",
                            FeatureName = "sunRoof",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fsunroof-icon.png?alt=media&token=88b4101d-1fec-40c0-9534-989e39d08516",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Offers satellite-based navigation and route guidance",
                            DisplayName = "GPS",
                            FeatureName = "gps",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fgps-icon.png?alt=media&token=39ae42c8-a678-4f05-b5dd-9e20eb42d31f",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("6ebf1d36-35fa-4cad-9d6f-671476d02020"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Secures infants in a specially designed seat for maximum safety",
                            DisplayName = "Baby Seat",
                            FeatureName = "babySeat",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fbabyseat-icon.png?alt=media&token=2ad93b19-7448-46f9-9029-19871a357eb6",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Allows charging and connecting devices to the vehicle's system",
                            DisplayName = "USB Port",
                            FeatureName = "usbPort",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fusb-icon.png?alt=media&token=3fce192b-6d2f-43f5-8e0b-3546c1e50e31",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A backup tire stored in the vehicle for emergency replacements",
                            DisplayName = "Spare Tire",
                            FeatureName = "spareTire",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fspare_tire-icon.png?alt=media&token=01a8dc7b-e98c-479c-943c-e337e3964e8d",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Displays video content for rear-seat entertainment during trips",
                            DisplayName = "DVD Monitor",
                            FeatureName = "dvdMonitor",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fdvd-icon.png?alt=media&token=49e66de4-ec15-42d5-9787-50f23ba0c074",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Covers and protects the engine compartment from external elements",
                            DisplayName = "Bonnet",
                            FeatureName = "bonnet",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fbonnet-icon.png?alt=media&token=a39d6283-4a5a-48a9-8c6a-8c2d539cd05b",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Automatically processes toll payments while driving",
                            DisplayName = "Etc",
                            FeatureName = "etc",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fetc-icon.png?alt=media&token=e2494201-b1ff-4cfa-982d-4618537ce4c5",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Deploy in collisions to protect passengers from injury",
                            DisplayName = "Air bags",
                            FeatureName = "airbags",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fairbags-icon.png?alt=media&token=55c3c49f-1b88-4782-8124-7828a6df07f8",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("CarId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageId = new Guid("0831c830-8ab9-41ee-8abe-aeea4f832715"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar11.jpg?alt=media&token=41cf30ec-f792-4074-9406-a5d2a98a49e6"
                        },
                        new
                        {
                            ImageId = new Guid("16931f6d-b074-4bd2-9082-3de35b6db9d5"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar12.jpg?alt=media&token=c1f10fdd-cb99-4c27-933d-4700acc9272e"
                        },
                        new
                        {
                            ImageId = new Guid("e33dfafe-cf13-43ba-93bc-9b150831123e"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar13.jpg?alt=media&token=2782d4ec-0184-47a7-8964-148e4c6928ae"
                        },
                        new
                        {
                            ImageId = new Guid("27e79248-04e4-4961-a0b1-cf22c2319ae4"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar14.jpg?alt=media&token=6ce903bb-ce8b-4c6d-bc34-d8a1b664f625"
                        },
                        new
                        {
                            ImageId = new Guid("bf8a664f-88fe-4e7c-b91c-427dd10970c2"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar21.jpg?alt=media&token=735db85a-0e4f-4645-a764-1657d1ccf7d0"
                        },
                        new
                        {
                            ImageId = new Guid("4d4c2964-6453-4522-923e-1688da305391"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar22.jpg?alt=media&token=745493d0-4f34-4c7f-bb8c-f8c891e01422"
                        },
                        new
                        {
                            ImageId = new Guid("91762bd8-9200-4d45-9ee8-e8f0e983e921"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar23.jpg?alt=media&token=fd7110ec-aa36-4610-a69d-b00abdf886ec"
                        },
                        new
                        {
                            ImageId = new Guid("5f11ba97-bde5-4400-b6dd-b4e02025a0d7"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar24.jpg?alt=media&token=263ace26-9d00-41d4-869c-760319e406dd"
                        },
                        new
                        {
                            ImageId = new Guid("119d2e54-a9c0-4b7c-87d6-5cd2f2501da9"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar31.jpg?alt=media&token=6c0188d7-d743-4e0b-9795-a0ceeae64dba"
                        },
                        new
                        {
                            ImageId = new Guid("24971c14-5f2f-41aa-886b-1c114186d3bc"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar32.jpg?alt=media&token=9a497c45-8b33-40ae-bf8a-86b29747324b"
                        },
                        new
                        {
                            ImageId = new Guid("782d4c8e-2605-4a2d-87ba-3d1f2c9eb4d6"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar33.jpg?alt=media&token=557246dd-3d64-45a5-97fa-9b122cd316c9"
                        },
                        new
                        {
                            ImageId = new Guid("dad87d5e-c756-4ee5-ae27-c3f84901c9d3"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar34.jpg?alt=media&token=d7874dde-8f83-4d86-a902-04ce22c9942c"
                        },
                        new
                        {
                            ImageId = new Guid("2263a83a-5199-4240-9ecb-b19701d1fcf5"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar41.jpg?alt=media&token=e8d9380a-0931-4215-a080-96204098774d"
                        },
                        new
                        {
                            ImageId = new Guid("6ebfaf1c-748f-484a-b8b7-b7ddac7c883d"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar42.jpg?alt=media&token=78c1211b-d7a7-45ed-a03a-09a442c2b529"
                        },
                        new
                        {
                            ImageId = new Guid("d898f1d5-cf63-4250-a8f7-c8cf25c61a46"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar43.jpg?alt=media&token=b994c70b-b366-44dc-bcbe-d4c6219ba189"
                        },
                        new
                        {
                            ImageId = new Guid("38e6db85-3e32-4077-804c-f2287d118fd0"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar44.jpg?alt=media&token=e55eeb29-93b0-47b3-911f-df204e877469"
                        },
                        new
                        {
                            ImageId = new Guid("03071ddf-22c3-4321-9cfc-4c1dd506a9a3"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar51.jpg?alt=media&token=6e55f0be-c666-4c50-a30e-44b4a703260d"
                        },
                        new
                        {
                            ImageId = new Guid("589b7e11-94c3-4c5b-b4cb-2b3d215be33b"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar52.jpg?alt=media&token=ad7a0fd8-b4eb-4326-a475-342a9e0b01b8"
                        },
                        new
                        {
                            ImageId = new Guid("82428e6a-19f6-4599-aae1-13712934b3f8"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar53.jpg?alt=media&token=c76e6223-2ca1-4bac-bd7b-dd3f18323f37"
                        },
                        new
                        {
                            ImageId = new Guid("155e7784-a812-4571-bead-f8d7ca2478b5"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar54.jpg?alt=media&token=ed8a9204-288e-44f8-b047-ba4a80d5a45e"
                        },
                        new
                        {
                            ImageId = new Guid("13aecfda-8e98-4c0e-abc0-e20f1d13e961"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar61.jpg?alt=media&token=fab2b814-962d-4098-839c-758fb97642e5"
                        },
                        new
                        {
                            ImageId = new Guid("c5de75b4-9631-43c0-8ac6-a9da568a967a"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar62.jpg?alt=media&token=159d9f2e-fad1-4846-876d-3c4b9fa1e720"
                        },
                        new
                        {
                            ImageId = new Guid("bfbbaa76-998f-4d46-bbfe-664be8c4f6a5"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar63.jpg?alt=media&token=34a62380-de76-46c7-9752-9b13e8cc7ac5"
                        },
                        new
                        {
                            ImageId = new Guid("90fe95a8-3617-4676-abfa-9f86ed314bbb"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar64.jpg?alt=media&token=9a4b198d-c2c4-4585-b424-fd2b326fc97c"
                        },
                        new
                        {
                            ImageId = new Guid("fdf80856-da90-4190-bf4e-66ed0601a4ba"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar65.jpg?alt=media&token=8761aa35-f030-4fa7-a020-66f0a6810090"
                        },
                        new
                        {
                            ImageId = new Guid("643c0c50-b89e-4d60-b339-28254d008738"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar66.jpg?alt=media&token=d3102c30-035b-47cd-a8f8-f66be7a24f6f"
                        },
                        new
                        {
                            ImageId = new Guid("146a6452-4bc4-4922-bb33-a69d1d0612dd"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar67.jpg?alt=media&token=63ef5ae3-3d82-4e38-8412-aaa93f6785b6"
                        },
                        new
                        {
                            ImageId = new Guid("53337daf-c5af-452f-802a-d8b829a9d068"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar71.jpg?alt=media&token=f67cdcdb-55a4-46da-bcab-a498b8eea245"
                        },
                        new
                        {
                            ImageId = new Guid("e746af29-8cfb-4f2a-b1d8-593f44e0acd7"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar72.jpg?alt=media&token=30a3ac2a-0797-4240-b65e-8a3ceb63a839"
                        },
                        new
                        {
                            ImageId = new Guid("de16b5e0-65e8-45d1-ae2c-a446febb4b0d"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar73.jpg?alt=media&token=1750f1a1-62c5-4ab9-87ad-89301f4bc9b2"
                        },
                        new
                        {
                            ImageId = new Guid("6c521908-21ff-4e8d-a8d0-4c05c8a2e5a7"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar74.jpg?alt=media&token=95622732-d623-4eda-aa62-6c8ee1e96f28"
                        },
                        new
                        {
                            ImageId = new Guid("113d7987-dea8-4093-8b09-3ee0de72bb3c"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar81.jpg?alt=media&token=22679c70-85f4-4b86-8934-fb1d2a60b1b9"
                        },
                        new
                        {
                            ImageId = new Guid("23fbf12e-52d0-4438-a9fe-f681d12b89fa"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar82.jpg?alt=media&token=de9c9bc7-c8e8-4969-b680-11fd990fe8a2"
                        },
                        new
                        {
                            ImageId = new Guid("1df708b5-2560-4664-89d6-6ee1e3b88d26"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar83.jpg?alt=media&token=127dc8ca-bcdb-42a1-9e7c-44e35ca985c8"
                        },
                        new
                        {
                            ImageId = new Guid("61c40521-3a6f-4a6a-816d-8c2a7f449997"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar84.jpg?alt=media&token=0c49d25b-e1c5-4b31-b5eb-a313baa44b5e"
                        },
                        new
                        {
                            ImageId = new Guid("bfbf38c4-5645-4392-9020-6c5b992ff46e"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar85.jpg?alt=media&token=8ab32d35-6b26-4fb7-8a5a-4e013161a768"
                        },
                        new
                        {
                            ImageId = new Guid("8df59a4b-c2fe-4023-8a1e-7f308c8f68b8"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar91.jpg?alt=media&token=466bda06-2bf1-493f-9dd5-eee4ce0a94ab"
                        },
                        new
                        {
                            ImageId = new Guid("d539cbdb-a20c-4fd9-ac69-21fcb067249b"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar92.jpg?alt=media&token=fc46713e-0c32-486c-9c6c-546318f09d9d"
                        },
                        new
                        {
                            ImageId = new Guid("a870408e-435b-4448-bb23-93bf329e40d5"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar93.jpg?alt=media&token=782b1c2f-49d2-4673-8101-330020231a01"
                        },
                        new
                        {
                            ImageId = new Guid("ec97accb-b58d-4677-b6c5-4c87e3441de9"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar94.jpg?alt=media&token=94d25ed1-c76b-4edf-be53-0fe909ec5307"
                        },
                        new
                        {
                            ImageId = new Guid("63d8419b-ae3c-4867-96e2-2773531291d3"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar101.jpg?alt=media&token=77127151-3472-4206-8540-6909ec874c71"
                        },
                        new
                        {
                            ImageId = new Guid("f0e7a8c5-16e7-4a32-bf1d-3cadafaf7153"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar102.jpg?alt=media&token=46f90372-9790-43f5-ae41-6f35c7961660"
                        },
                        new
                        {
                            ImageId = new Guid("fb35d1d2-5ff3-4016-86f0-df5d5657c736"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar103.jpg?alt=media&token=b9e6ed3c-1328-4935-9eab-d3335638e503"
                        },
                        new
                        {
                            ImageId = new Guid("8dd7c100-ccf9-4e7b-a2e6-aa3525698243"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar104.jpg?alt=media&token=9688114d-001b-4f26-a5d8-562d9fb42bf7"
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Model", b =>
                {
                    b.Property<Guid>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ModelId");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            ModelId = new Guid("0ed1b055-dcd4-48ee-aeff-7478382f9e96"),
                            BrandId = new Guid("c6669c8e-f8a8-443c-8446-83c010b44ec0"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "CX5 Deluxe",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("f660d2b0-0444-4c02-b15a-2ebc871d8f4b"),
                            BrandId = new Guid("a1f14e7e-342b-4f17-b7fc-9e7ca13483b2"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "VF6 Plus",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("4e39763c-501a-47ea-9d11-f884de1e7e4e"),
                            BrandId = new Guid("de716878-747e-4b02-9fce-46d67a13c30f"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "3008",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("1dc0a8e3-19b1-45f0-aec8-a810722de8f5"),
                            BrandId = new Guid("9bb29e7a-ca23-4418-81d4-b9b66e7cf107"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "Ecosport",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("32234d9d-90f2-4011-ba7f-85ead67a98bd"),
                            BrandId = new Guid("1c38dc33-e4d6-4922-abc4-1fa8cfc314b2"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "RX450H",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("fdfdef71-0e39-48f0-8eec-71f5429ed285"),
                            BrandId = new Guid("c11c6f51-c207-4754-9372-046fb4a04c22"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "Creta",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("16fd3123-d971-422c-b2af-e47978c27f35"),
                            BrandId = new Guid("c11c6f51-c207-4754-9372-046fb4a04c22"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "Tucson Premium",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("affeb1d2-7eb3-4410-a7ca-e3b1adc3cc54"),
                            BrandId = new Guid("de716878-747e-4b02-9fce-46d67a13c30f"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "2008 GT",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("542d93fd-4bc2-48df-9e58-f12c17a96d79"),
                            BrandId = new Guid("b802da6e-e178-46f5-9884-442e0f1067dc"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "ZS Standard",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("6e18d51e-2964-4f16-a00c-0d4544671816"),
                            BrandId = new Guid("4e5784bd-10a3-4fb4-ad50-fb0304da90d9"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "Innova",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RentalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PaymentId");

                    b.HasIndex("RentalId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Rental", b =>
                {
                    b.Property<Guid>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InsuranceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PickupLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RemainAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RentalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RentalStatus")
                        .HasColumnType("int");

                    b.Property<string>("ReturnLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RentalId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Review", b =>
                {
                    b.Property<Guid>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Author")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Flag")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("RentalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReviewId");

                    b.HasIndex("Author");

                    b.HasIndex("CarId");

                    b.HasIndex("RentalId")
                        .IsUnique();

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Identity.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            DisplayName = "Khách Hàng",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = new Guid("c0278115-8549-4fad-890a-44f8e8fcc022"),
                            DisplayName = "Quản Lí",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = new Guid("ab8e4032-2d95-45cc-89c1-c039e9e8bc39"),
                            DisplayName = "Chủ Xe",
                            Name = "Owner",
                            NormalizedName = "CarOwener"
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Identity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VipExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VipStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "92a32a49-8efe-4efd-b58f-9c73e5fdabd4",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quocdai@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Nguyen Quoc Dai",
                            LockoutEnabled = false,
                            NormalizedEmail = "QUOCDAI@GMAIL.COM",
                            NormalizedUserName = "DAINQ115",
                            PasswordHash = "AQAAAAIAAYagAAAAEFIhDBxYRhlitCD4nVLK/UmTL9cSltGA6WpV5rG/PrXqwfNrWexJdZOHpmvRGypLRA==",
                            PhoneNumber = "0932748924",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4a8167e1-1df3-4c4a-a23b-627d5498f878",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "dainq115"
                        },
                        new
                        {
                            Id = new Guid("9d7e87a9-b070-4607-a0b0-2d2322aece9b"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6402dd74-aa67-4034-8312-ed2b9f35b43f",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "toanvan@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Van Huu Toan",
                            LockoutEnabled = false,
                            NormalizedEmail = "TOANVAN@GMAIL.COM",
                            NormalizedUserName = "VIPRO123",
                            PasswordHash = "AQAAAAIAAYagAAAAENMefewt5Qixk5XL3r0RuDW213AIaEFUuZoSmLG2OiWYLNXUUni8sArluIDad+b5vw==",
                            PhoneNumber = "0999998888",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "837c765c-dcab-40a2-a56c-53d1433deaa0",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "vipro123"
                        },
                        new
                        {
                            Id = new Guid("0075ba2c-f60d-4f75-b9f1-f71579bc4fd2"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "807a55d3-629d-46bb-be21-538d4e239c88",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khanhpham@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Nguyen Pham Khanh",
                            LockoutEnabled = false,
                            NormalizedEmail = "KHANHPHAM@GMAIL.COM",
                            NormalizedUserName = "KUEM113",
                            PasswordHash = "AQAAAAIAAYagAAAAEHP77Q5hybyVW+453MZsYTke/LwaPpEdEuIvltfLdALT4ZJ5Ese+tk1U4R8eDs9Dtg==",
                            PhoneNumber = "0969998878",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "678a74b6-e8a2-4e80-a4cf-95d4a02c4c0d",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "kuem113"
                        },
                        new
                        {
                            Id = new Guid("3b1a8845-765f-4d91-984a-4e8a9d7d376e"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9b690a3e-7097-4352-a864-58477fc3e522",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khaitoi@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Phan Van Khai",
                            LockoutEnabled = false,
                            NormalizedEmail = "KHAITOI@GMAIL.COM",
                            NormalizedUserName = "XAUTRAI123",
                            PasswordHash = "AQAAAAIAAYagAAAAEP0QR8HPKksgbiD8wv8apbTdJoDHWB9dID2bFUPMIlmu8a0c+LFA2ChzFYy5hhXGTw==",
                            PhoneNumber = "0777444499",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dbbc22f7-f968-4a98-a8e8-93463eddd963",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "xautrai123"
                        },
                        new
                        {
                            Id = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1f102203-8160-4228-8c35-a9265da9562e",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quangdalat@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Quang La Tui",
                            LockoutEnabled = false,
                            NormalizedEmail = "QUANGDALAT@GMAIL.COM",
                            NormalizedUserName = "QUANGSPA009",
                            PasswordHash = "AQAAAAIAAYagAAAAEHTKDW/aTH6rc4v7NNMHfPVA+1LTo/STQQ99z4j5lcHHGLQCNNrHEN1hF+qcMKP0SQ==",
                            PhoneNumber = "0999777712",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7a16fd14-a847-48c2-9d1d-b7d1476e4f5b",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "quangspa09"
                        },
                        new
                        {
                            Id = new Guid("1246b8e5-af73-4aa3-bdef-b8815e21a78b"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8155cf8a-3c0c-4bfe-ad5b-adffc63153bb",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "duythunglungtinhiu@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Pham Hoai Duy",
                            LockoutEnabled = false,
                            NormalizedEmail = "DUYTHUNGLUNGTINHIU",
                            NormalizedUserName = "DUYPRO113",
                            PasswordHash = "AQAAAAIAAYagAAAAEFaz9OYb4n28RsLy6hMao+Nz6CpBoUXB3SFXipZ3I+XqIp1oRWjojl/lmo1j60uugQ==",
                            PhoneNumber = "0555666612",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d6c5e8d6-5915-45f0-a69a-c510ac3bd99e",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "duypro113"
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Address", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Car", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.CarType", "CarType")
                        .WithMany("Cars")
                        .HasForeignKey("CarTypeId");

                    b.HasOne("MocatiCar.Core.Domain.Content.Model", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "User")
                        .WithMany("Cars")
                        .HasForeignKey("OwnerId");

                    b.Navigation("CarType");

                    b.Navigation("Model");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CarFeature", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("CarFeatures")
                        .HasForeignKey("CarId");

                    b.HasOne("MocatiCar.Core.Domain.Content.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId");

                    b.Navigation("Car");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CitizenId", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "User")
                        .WithOne("CitizenId")
                        .HasForeignKey("MocatiCar.Core.Domain.Content.CitizenId", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Contract", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Rental", "Rental")
                        .WithMany("Contracts")
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.DrivingLicense", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "Users")
                        .WithOne("DrivingLicenses")
                        .HasForeignKey("MocatiCar.Core.Domain.Content.DrivingLicense", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.FavoriteCar", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("FavoriteCars")
                        .HasForeignKey("CarId");

                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "User")
                        .WithMany("FavoriteCars")
                        .HasForeignKey("UserId");

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Image", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("Images")
                        .HasForeignKey("CarId");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Model", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Payment", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Rental", "Rental")
                        .WithMany("Payments")
                        .HasForeignKey("RentalId");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Rental", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", null)
                        .WithMany("Rentals")
                        .HasForeignKey("AppUserId");

                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("Rentals")
                        .HasForeignKey("CarId");

                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "Customer")
                        .WithMany("CustomerRentals")
                        .HasForeignKey("CustomerId");

                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "Owner")
                        .WithMany("OwnerRentals")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Car");

                    b.Navigation("Customer");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Review", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("Author");

                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("Reviews")
                        .HasForeignKey("CarId");

                    b.HasOne("MocatiCar.Core.Domain.Content.Rental", "Rental")
                        .WithOne("Review")
                        .HasForeignKey("MocatiCar.Core.Domain.Content.Review", "RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Rental");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Car", b =>
                {
                    b.Navigation("CarFeatures");

                    b.Navigation("FavoriteCars");

                    b.Navigation("Images");

                    b.Navigation("Rentals");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CarType", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Model", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Rental", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Payments");

                    b.Navigation("Review")
                        .IsRequired();
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Identity.AppUser", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Cars");

                    b.Navigation("CitizenId")
                        .IsRequired();

                    b.Navigation("CustomerRentals");

                    b.Navigation("DrivingLicenses")
                        .IsRequired();

                    b.Navigation("FavoriteCars");

                    b.Navigation("OwnerRentals");

                    b.Navigation("Rentals");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
