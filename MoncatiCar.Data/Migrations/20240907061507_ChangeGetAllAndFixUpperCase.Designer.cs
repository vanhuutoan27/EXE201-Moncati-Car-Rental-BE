// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoncatiCar.Data;

#nullable disable

namespace MoncatiCar.Data.Migrations
{
    [DbContext(typeof(MocatiContext))]
    [Migration("20240907061507_ChangeGetAllAndFixUpperCase")]
    partial class ChangeGetAllAndFixUpperCase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("AppUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("9d7e87a9-b070-4607-a0b0-2d2322aece9b")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("0075ba2c-f60d-4f75-b9f1-f71579bc4fd2")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("3b1a8845-765f-4d91-984a-4e8a9d7d376e")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("1246b8e5-af73-4aa3-bdef-b8815e21a78b")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("8f3dbc12-27b8-49ac-8049-c67e065ce7c0")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Address", b =>
                {
                    b.Property<Guid>("addressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addressName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("commune")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.Property<string>("locationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("addressId");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Brand", b =>
                {
                    b.Property<Guid>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = new Guid("c6669c8e-f8a8-443c-8446-83c010b44ec0"),
                            BrandName = "Mazda",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4461),
                            Description = "A Japanese automaker known for its stylish designs, advanced technology, and driving pleasure. Mazda’s “Kodo” design philosophy and SkyActiv technology are key highlights.",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4463)
                        },
                        new
                        {
                            BrandId = new Guid("a1f14e7e-342b-4f17-b7fc-9e7ca13483b2"),
                            BrandName = "Vinfast",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4470),
                            Description = "A Vietnamese car manufacturer that quickly gained attention for its electric and gasoline vehicles. VinFast aims to bring Vietnamese-made cars to the global market with a focus on quality and innovation.",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4471)
                        },
                        new
                        {
                            BrandId = new Guid("de716878-747e-4b02-9fce-46d67a13c30f"),
                            BrandName = "Peugeot",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4475),
                            Description = "A French car brand with a long history, known for producing elegant and reliable vehicles. Peugeot is recognized for its sophisticated design, comfort, and European flair.",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4476)
                        },
                        new
                        {
                            BrandId = new Guid("9bb29e7a-ca23-4418-81d4-b9b66e7cf107"),
                            BrandName = "Ford",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4479),
                            Description = "An American automaker famous for its durable vehicles, including the iconic Ford Mustang and F-Series trucks. Ford has a significant influence on the global automotive industry.",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4480)
                        },
                        new
                        {
                            BrandId = new Guid("1c38dc33-e4d6-4922-abc4-1fa8cfc314b2"),
                            BrandName = "Lexus",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4483),
                            Description = "The luxury division of Toyota, Lexus is renowned for its refined craftsmanship, advanced technology, and smooth, comfortable rides. It’s a symbol of reliability and premium quality.",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4484)
                        },
                        new
                        {
                            BrandId = new Guid("c11c6f51-c207-4754-9372-046fb4a04c22"),
                            BrandName = "Hyundai",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4488),
                            Description = "A South Korean car manufacturer that offers a wide range of vehicles, known for their affordability, modern designs, and advanced features. Hyundai has rapidly grown to become a major global player.",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4489)
                        },
                        new
                        {
                            BrandId = new Guid("b802da6e-e178-46f5-9884-442e0f1067dc"),
                            BrandName = "Mg",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4500),
                            Description = "Originally a British brand, now owned by Chinese automaker SAIC. MG is known for affordable vehicles with a focus on modern technology and youthful appeal.",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4501)
                        },
                        new
                        {
                            BrandId = new Guid("4e5784bd-10a3-4fb4-ad50-fb0304da90d9"),
                            BrandName = "Toyota",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4505),
                            Description = "One of the largest and most reliable car manufacturers in the world. Toyota is known for its long-lasting vehicles, efficiency, and innovations like hybrid technology with models like the Prius.",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4506)
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Car", b =>
                {
                    b.Property<Guid>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DeliveryFeePerKm")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FreeDeliveryWithinKm")
                        .HasColumnType("int");

                    b.Property<float?>("FuelConsumption")
                        .HasColumnType("real");

                    b.Property<int>("FuelType")
                        .HasColumnType("int");

                    b.Property<bool?>("InstantBooking")
                        .HasColumnType("bit");

                    b.Property<int?>("LimitKilometersPerDay")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxDeliveryDistance")
                        .HasColumnType("int");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("OverLimitFeePerKm")
                        .HasColumnType("int");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RentalStatus")
                        .HasColumnType("int");

                    b.Property<string>("RentalTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Transmission")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("discount")
                        .HasColumnType("real");

                    b.Property<string>("licensePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("CarTypeId");

                    b.HasIndex("ModelId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4937),
                            DeliveryFeePerKm = 10,
                            Description = "Mazda CX5 2017-2.0 Fuel efficient<br/>New, beautiful car, regularly maintained, clean…<br/>Spacious, comfortable car, suitable for family travel.<br/>Car has rear camera, sunroof, dash cam, entertainment system and many other amenities…",
                            FreeDeliveryWithinKm = 5,
                            FuelConsumption = 7f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 100,
                            Location = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 10,
                            ModelId = new Guid("0ed1b055-dcd4-48ee-aeff-7478382f9e96"),
                            OverLimitFeePerKm = 200,
                            OwnerId = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87"),
                            PricePerDay = 861000m,
                            RentalStatus = 0,
                            Seats = 4,
                            Slug = "mazda-cx5-deluxe-2017-vq57kp",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4939),
                            discount = 20f,
                            licensePlate = "15A-341.79",
                            year = 2017
                        },
                        new
                        {
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4956),
                            DeliveryFeePerKm = 10,
                            Description = "Beautiful new family car, original interior, clean, equipped with 3M crystalline film, the car is very cool in hot weather, coated with anti-nail and noise-proof tires.<br/>",
                            FreeDeliveryWithinKm = 10,
                            FuelConsumption = 381f,
                            FuelType = 2,
                            InstantBooking = false,
                            LimitKilometersPerDay = 200,
                            Location = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("f660d2b0-0444-4c02-b15a-2ebc871d8f4b"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87"),
                            PricePerDay = 953000m,
                            RentalStatus = 1,
                            Seats = 5,
                            Slug = "vinfast-vf6-plus-2024-j7tjxw",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4957),
                            discount = 15f,
                            licensePlate = "51L-216.13",
                            year = 2024
                        },
                        new
                        {
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4969),
                            DeliveryFeePerKm = 0,
                            Description = "Great car! Very comfortable and spacious for my family trip",
                            FreeDeliveryWithinKm = 0,
                            FuelConsumption = 10f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 1, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 1, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("4e39763c-501a-47ea-9d11-f884de1e7e4e"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87"),
                            PricePerDay = 1343000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "peugeot-3008-2022-wlh7hm",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4970),
                            discount = 0f,
                            licensePlate = "51K-418.61",
                            year = 2022
                        },
                        new
                        {
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4980),
                            DeliveryFeePerKm = 0,
                            Description = "The car is in excellent condition and very clean. Highly recommended!",
                            FreeDeliveryWithinKm = 0,
                            FuelConsumption = 9f,
                            FuelType = 0,
                            InstantBooking = true,
                            LimitKilometersPerDay = 50,
                            Location = "Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
                            LocationDetails = "Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 7,
                            ModelId = new Guid("1dc0a8e3-19b1-45f0-aec8-a810722de8f5"),
                            OverLimitFeePerKm = 100,
                            OwnerId = new Guid("9d7e87a9-b070-4607-a0b0-2d2322aece9b"),
                            PricePerDay = 666000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "ford-ecosport-2015-duz4bh",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4981),
                            discount = 0f,
                            licensePlate = "51F-320.56",
                            year = 2015
                        },
                        new
                        {
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4993),
                            DeliveryFeePerKm = 10,
                            Description = "Lexus RX 450h automatic transmission manufactured in 2010 Japan<br/>Last inspection date: 7/7/2023<br/>Clean and tidy family car",
                            FreeDeliveryWithinKm = 5,
                            FuelConsumption = 7f,
                            FuelType = 0,
                            InstantBooking = true,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 2, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 2, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("32234d9d-90f2-4011-ba7f-85ead67a98bd"),
                            OverLimitFeePerKm = 150,
                            OwnerId = new Guid("9d7e87a9-b070-4607-a0b0-2d2322aece9b"),
                            PricePerDay = 3706000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "lexus-rx450h-2010-4urh11",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4994),
                            discount = 0f,
                            licensePlate = "51A-900.56",
                            year = 2010
                        },
                        new
                        {
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5006),
                            DeliveryFeePerKm = 10,
                            Description = "Safety:\nHyundai Creta has familiar features such as: ABS – EBD – BA brakes, electronic balance, traction control, hill start assist, tire pressure sensor, parking assist sensor, rear camera, 6 airbags…<br/>Convenience:<br/>Leather seats, Bose standard sound system, navigation, speed warning, electronic handbrake…",
                            FreeDeliveryWithinKm = 5,
                            FuelConsumption = 6f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 9, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 9, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("fdfdef71-0e39-48f0-8eec-71f5429ed285"),
                            OverLimitFeePerKm = 150,
                            OwnerId = new Guid("0075ba2c-f60d-4f75-b9f1-f71579bc4fd2"),
                            PricePerDay = 1033000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "hyundai-creta-2022-wesu5v",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5008),
                            discount = 0f,
                            licensePlate = "51K-392.51",
                            year = 2022
                        },
                        new
                        {
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5018),
                            DeliveryFeePerKm = 15,
                            Description = "Comfortable 5-seater car, beautiful car, strong engine, full interior and amenities",
                            FreeDeliveryWithinKm = 7,
                            FuelConsumption = 7f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 2, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 2, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 4,
                            ModelId = new Guid("16fd3123-d971-422c-b2af-e47978c27f35"),
                            OverLimitFeePerKm = 100,
                            OwnerId = new Guid("0075ba2c-f60d-4f75-b9f1-f71579bc4fd2"),
                            PricePerDay = 1073000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "hyundai-tucson-premium-2021-nixl5v",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5019),
                            discount = 10f,
                            licensePlate = "30K-605.01",
                            year = 2021
                        },
                        new
                        {
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5028),
                            DeliveryFeePerKm = 0,
                            Description = "The 2021 PEUGEOT 2008 GT is a stylish and compact SUV featuring a sporty design, advanced technology, and efficient engine options. It offers a comfortable and spacious interior with premium materials, making it ideal for urban driving and longer journeys",
                            FreeDeliveryWithinKm = 0,
                            FuelConsumption = 5f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 0,
                            Location = "Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
                            LocationDetails = "Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("affeb1d2-7eb3-4410-a7ca-e3b1adc3cc54"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d"),
                            PricePerDay = 1101000m,
                            RentalStatus = 0,
                            Seats = 4,
                            Slug = "peugeot-2008-gt-2022-x5uac6",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5029),
                            discount = 0f,
                            licensePlate = "51H-815.11",
                            year = 2021
                        },
                        new
                        {
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5040),
                            DeliveryFeePerKm = 20,
                            Description = "The 2021 GARAGES ZS SMART UP STANDARD is a compact SUV designed for urban driving. It features a modern exterior with sleek lines, a spacious and well-equipped interior, and smart technology integration. The vehicle offers a smooth ride with fuel-efficient engine options, making it a practical choice for everyday use.",
                            FreeDeliveryWithinKm = 0,
                            FuelConsumption = 4f,
                            FuelType = 0,
                            InstantBooking = true,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 9, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 9, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("542d93fd-4bc2-48df-9e58-f12c17a96d79"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d"),
                            PricePerDay = 976000m,
                            RentalStatus = 0,
                            Seats = 4,
                            Slug = "mg-zs-standard-2022-k18fhr",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5041),
                            discount = 0f,
                            licensePlate = "21A-134.52",
                            year = 2022
                        },
                        new
                        {
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5052),
                            DeliveryFeePerKm = 0,
                            Description = "The 2021 Toyota Innova E is a versatile and reliable MPV designed for family comfort and practicality. It boasts a spacious interior with ample seating and cargo space, advanced safety features, and a smooth driving experience.",
                            FreeDeliveryWithinKm = 8,
                            FuelConsumption = 9f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 150,
                            Location = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 5,
                            ModelId = new Guid("6e18d51e-2964-4f16-a00c-0d4544671816"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d"),
                            PricePerDay = 821000m,
                            RentalStatus = 0,
                            Seats = 7,
                            Slug = "toyota-innova-2020-3ymd75",
                            Status = true,
                            Transmission = 0,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5053),
                            discount = 20f,
                            licensePlate = "51L-288.32",
                            year = 2020
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CarFeature", b =>
                {
                    b.Property<Guid>("CarFeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CarFeatureId");

                    b.HasIndex("CarId");

                    b.HasIndex("FeatureId");

                    b.ToTable("CarFeatures");

                    b.HasData(
                        new
                        {
                            CarFeatureId = new Guid("64dbd9fd-670c-4b9c-b420-6eafc90a29f1"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b50408fc-c7d0-4e1c-a941-1420bd415f2a"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("328e5ba1-a1f1-494f-bf68-931f055a8fc7"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("59102cd1-6b10-4476-96ec-1e07b17e19c1"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("5881fad7-f478-4519-86e9-74d715ed627c"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("cadb6ae2-2532-45d8-9ebf-6506f44d7175"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("8881cd3c-4145-4ee5-9785-704a1441ca9b"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b2c89505-f047-423b-a98e-b4a1e45aa59d"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("91ecf0c7-b67a-43ff-8afc-984afc1bdd43"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("1c0ea67d-f6da-4ecf-a222-6d68059d0f3c"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("0ed3daa1-caf6-4578-8e15-5197c43996b4"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("3ebcada5-6b52-4e95-adaa-a4af8b49143a"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("1cb3a7f6-ff53-41b0-9f02-bf61a025411b"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("057a1372-7663-41ef-8ffa-e9ec174c4b95"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ba2cb5d4-9fb8-4946-8abe-4dc47e54e6df"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("36d3f87b-b567-43e1-a6bb-0117a43659e3"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c11a0141-b630-4ba7-b613-bc6561995044"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c8fcc7c3-5376-4f07-9a93-4be3027ddef5"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d314e44a-e018-4a67-b213-d99ac600b310"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("5cd0f48a-9f68-4aac-8ce2-090172b9483e"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("cb3bf370-4df4-4e22-8785-13433685274a"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("79a5cb18-156f-47ae-9ac0-cdfdd4af0647"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d58be081-332f-4635-af6d-34c2fab11639"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("997f0043-9429-4c6d-a85c-5b04dbb52581"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a2669f20-60ae-41fe-9372-7c6e9b957533"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9d1e4561-2767-4b46-84bc-07baa696ff5c"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ec5f0b71-759f-4a0e-880c-03b08edb2cbe"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a14d2bb4-9f81-4782-954e-140bfa3202e8"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c44a631a-8b73-4ee4-b15f-9c50cb9c5d58"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("00ec8fd3-97e4-4c82-aa89-312d4309c589"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("2dbdf096-96c5-4b95-bb6f-8a62ad099e8b"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e982c371-5b7d-4ae1-8a91-eab370b0e572"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("99b7ba70-149c-41c7-9ff2-a34aaa986142"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("2e6cacb9-cf8b-4407-8a62-a5a58005854b"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a7521444-a5b6-4877-82f4-fb75aab487d5"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("f98a0c6b-f6f0-4832-814d-13efbcaa43dc"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ee4283a4-c542-4c82-8008-2eba342ced69"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d")
                        },
                        new
                        {
                            CarFeatureId = new Guid("2f310705-44c3-409b-a62e-2878fb153ec7"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("2ff68a82-d233-484c-9d0f-5a0204a58b67"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("bd9533d1-be9a-43d0-8b74-d33c3bfff129"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("97748245-e72d-4075-9d21-07d2a1742f27"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a5b6af74-f3b4-42b7-95d0-90c993f245d6"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("375f320b-237e-44cd-8df9-767c31a3d855"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("758a9068-30e8-4f80-a2bd-748627c87205"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("30dac6d4-18f6-42e6-bcaf-335ba64a3e4e"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("be731081-cb08-418d-82df-fa8af9c6a815"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("df8ad1f3-ccfd-4bd1-b213-a8563df05549"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("5bad367e-6aa4-41f5-87c7-31c653ca3c45"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e8244036-5bf9-4446-a466-6977fe8e7484"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c0cea25e-33e5-47c2-8f21-9ef25cd30d43"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ad49c758-f0b9-4d23-aada-4b060e377919"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("3a27005f-87a7-4aca-8c93-c2b3afc455c2"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("cc90a83a-f6d0-48c2-a089-107f86741038"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("5b916f14-90f8-4317-831f-7bf81b2bd7bc"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("db28dc87-c990-42bd-9543-4484709f65e0"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("8db3e296-315b-4a35-a72b-a1c39a63a20b"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("f8671110-1086-4482-af16-a81a0db4a3fb"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d2c62392-900f-4db5-b4a1-d9e396206c69"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6ccfdc3e-aff8-4158-bf5a-7dcaf2f68410"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("baf054f7-a78c-4d79-804e-edebc019557f"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e54d4407-c435-4198-bd2e-f9fd64f49011"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c2dd3fbc-8f78-4cfd-a43c-8a829aa39808"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a73ee156-a511-4986-b59c-d8e4d584cb89"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("64f3b182-bd65-4f51-8316-17db4e75463f"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d8a0e4d4-6f33-4e7f-856d-59b35a6aa002"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("83f9dabb-88d1-4966-9005-7bb5a6ea0573"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("85ef4b5e-a83c-4827-b906-a494f14e2d1b"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d62d5800-d062-4da7-8a1e-57ef1b082194"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("af79aae4-e924-4200-a5f3-62f369611567"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("906cf5f9-5cb5-4047-9910-449f5867ba4e"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("263bdf4a-4786-48c1-b157-7e049f0bcaa5"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("36db9f20-a5fd-4b75-9cf9-233934b811b7"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("4b31e1b9-c348-4394-9112-825942c92266"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b14f734b-2967-49cd-82d0-2ce2ee97e08a"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("10889c43-989e-4d41-937f-48509d558de1"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d")
                        },
                        new
                        {
                            CarFeatureId = new Guid("18f5955c-87e3-4fa6-98c5-714cb64872e1"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("2b6f08db-34fe-45c4-9c8c-c571aa71139c"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a110b5b7-b0f5-401b-b24c-af43267729f5"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fdeea9cf-80b4-4955-94ee-adfaf8fc8c8a"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9a5c7c5e-579a-4a2c-a8ee-d91ea8134741"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("6ebf1d36-35fa-4cad-9d6f-671476d02020")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ca782b74-f572-47ce-9e1c-0ab6cbcb1683"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("8a962ef3-9947-4723-8f1c-e7e1d6b461be"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("865f0bdf-74ca-4b2f-bba0-6c4cae1586de"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6b2f3bb9-af42-4499-b338-385ae6cdf892"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("7c1242d1-6f81-4f1a-beec-4e0260b52af0"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e123201a-d927-47f1-90cf-18ad9ef88f38"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("39aff6de-c350-4156-82f8-6ce7a343ab61"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9b272eb2-82bf-4f18-a3b4-5d5bcb11624e"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e1abc905-df8d-430e-9ce7-aa7fcbc53f52"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("8adfddd0-85fc-45ff-8475-b2adac745b44"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("4bc7afa9-b70e-4975-bc5d-6f6d2d414787"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("18ea6c2d-f789-46bf-b84b-812a76251fa1"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("bf28c684-dc32-4198-b300-841045e21c49"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("abc9b834-fcd3-4ba9-bebb-8d93b9612edb"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("30b35d5b-1cb1-4fa9-9231-071d57596fb9"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e44bf399-aca5-40a5-a81c-51633292a55f"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("5865d365-5cb8-44b4-bf26-a30fe330a51b"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("99f96be0-b919-4a1d-87ae-1d761ecfc74f"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6f56709b-663e-4751-bfb1-040af1cb900c"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("08ac7803-f139-45c0-92e2-d3e9e20e2867"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("655fbb7f-037e-42c5-a3c1-92507c38502d"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("375acda4-eb91-47c7-b064-e2413bbd56f3"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a4f1626c-e934-4a75-abcf-04603ad4e79c"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("0d1cf63f-a200-478f-b6d3-87eeb4d9d823"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ff9a6a81-9eac-48ae-be1e-0c0e5efd33bd"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ec327f83-e493-40ee-a8e7-271b84c60490"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("71abb662-998b-4f01-8414-4b74d4586234"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("07aa159d-0a5b-4003-94aa-9b772a66d4fc"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("4edddb33-0a14-4c51-97d9-200bf61bb627"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ae45eb77-cda4-4aa5-920e-8fb9266be364"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d650fdee-9a54-47fc-9c4c-1e0c8c8db429"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("8f39c694-bf8d-46e2-a172-19363c72a384"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("65cbeb47-4625-4359-ba71-3ce477690c50"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("5c8e41b5-e2b7-4057-a0a3-c8199cc1a9fc"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("22fbc477-6fd7-4eda-beb1-d201b935aa68"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("40409547-6947-4797-accf-19e92326010b"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("183f0573-f048-434f-9597-e3bf6679be9b"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("8a775c23-becf-4106-8ac0-42e41637e816"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ff06241b-2e29-41b1-91c5-f4e8ae776812"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("75d65d7d-5e45-48be-9454-9818178318bf"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6959b9dc-dc23-4503-81ed-933c1e031c03"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("055bd977-c952-4035-b928-3a39026f09e8"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("4021c8e1-dd9c-4edb-9d18-a4848dc8bd5d"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9ddf3155-13a9-42e6-be07-b9b822339aee"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("eb59f904-6332-4c05-86f3-82eb9af2bca8"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("adfa28de-e224-42a9-9cb1-c94f14c08256"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("1c6f73eb-9676-4f03-9a3a-e942ea6fb4bf"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9285d949-c02c-4dcd-9374-6bb18ea458e7"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("f2471242-78c8-475b-b07e-ff5cb2ddd02e"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fba78d77-93e9-4195-a8df-351f001eb5da"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d472d395-5526-4e32-8069-711264754af5"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("7f40ac59-7b19-4048-852f-ca4897133398"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("8247fbfc-c86c-416e-9b48-1b40e4ad7b5e"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b5c41e9c-4e42-4e11-82cf-571a96836628"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6ae5d65a-971a-44af-9a74-595ef4b25a76"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a89c8d6d-de9d-4ccb-8fce-0822be145a82"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6ebe3997-d742-45ea-bac0-f8735d725c40"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CarType", b =>
                {
                    b.Property<Guid>("CarTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CarTypeId");

                    b.ToTable("CarTypes");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Contract", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractTerms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RentalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Signature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContactId");

                    b.HasIndex("RentalId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Feature", b =>
                {
                    b.Property<Guid>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FeatureId");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4115),
                            Description = "Provides real-time navigation and location tracking while driving",
                            DisplayName = "Map",
                            FeatureName = "map",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fmap-icon.png?alt=media&token=ebf5968e-074f-4f5f-a20c-9020b5dfac7b",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4134)
                        },
                        new
                        {
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4141),
                            Description = "Enables wireless connection for hands-free calls and audio streaming",
                            DisplayName = "Bluetooth",
                            FeatureName = "bluetooth",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fbluetooth-icon.png?alt=media&token=422658da-d565-46e6-9e8f-b0ffccbb77dd",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4142)
                        },
                        new
                        {
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4150),
                            Description = "Offers a 360-degree view around the vehicle for safer maneuvering",
                            DisplayName = "Camera 360",
                            FeatureName = "camera360",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2F360_camera-icon.png?alt=media&token=12ef3912-ad25-4216-9d8a-aa3a10f3d956",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4151)
                        },
                        new
                        {
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4155),
                            Description = "Assists in parking by displaying rearview visuals on the screen",
                            DisplayName = "Parking Camera",
                            FeatureName = "parkingCamera",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fparking_camera-icon.png?alt=media&token=39675fd9-2e15-4275-a7e1-085a75fb491f",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4156)
                        },
                        new
                        {
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4160),
                            Description = "Records front road footage for safety and evidence during drives",
                            DisplayName = "Dash Camera",
                            FeatureName = "dashCamera",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fdash_camera-icon.png?alt=media&token=e863e966-7ce5-432f-9629-bd72fcdfcd1f",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4161)
                        },
                        new
                        {
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4169),
                            Description = "Displays rear visuals to aid in reversing safely",
                            DisplayName = "Reverse Camera",
                            FeatureName = "reverseCamera",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Freverse_camera-icon.png?alt=media&token=fff470fe-095c-4b9e-ac98-aa31827a6f91",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4170)
                        },
                        new
                        {
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4174),
                            Description = "Monitors tire pressure to ensure optimal driving safety",
                            DisplayName = "Tire Pressure Monitor",
                            FeatureName = "tirePressureMonitor",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Ftpms-icon.png?alt=media&token=5d93995e-c886-430c-843b-a80fb6ba3f46",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4174)
                        },
                        new
                        {
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4178),
                            Description = "Detects collisions and triggers safety mechanisms during impacts",
                            DisplayName = "Impact Sensor",
                            FeatureName = "impactSensor",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fimpact_sensor-icon.png?alt=media&token=1bc9001d-e5ca-4f48-98f8-dc86934cebc0",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4179)
                        },
                        new
                        {
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4183),
                            Description = "Projects essential driving information onto the windshield",
                            DisplayName = "Head Up",
                            FeatureName = "headUp",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fhead_up-icon.png?alt=media&token=63087d56-26a4-4f72-affc-3c5d55c33f31",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4184)
                        },
                        new
                        {
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4203),
                            Description = "Provides an open roof option for natural light and ventilation",
                            DisplayName = "Sun Roof",
                            FeatureName = "sunRoof",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fsunroof-icon.png?alt=media&token=88b4101d-1fec-40c0-9534-989e39d08516",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4204)
                        },
                        new
                        {
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4208),
                            Description = "Offers satellite-based navigation and route guidance",
                            DisplayName = "GPS",
                            FeatureName = "gps",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fgps-icon.png?alt=media&token=39ae42c8-a678-4f05-b5dd-9e20eb42d31f",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4213)
                        },
                        new
                        {
                            FeatureId = new Guid("6ebf1d36-35fa-4cad-9d6f-671476d02020"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4241),
                            Description = "Secures infants in a specially designed seat for maximum safety",
                            DisplayName = "Baby Seat",
                            FeatureName = "babySeat",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fbabyseat-icon.png?alt=media&token=2ad93b19-7448-46f9-9029-19871a357eb6",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4243)
                        },
                        new
                        {
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4250),
                            Description = "Allows charging and connecting devices to the vehicle's system",
                            DisplayName = "USB Port",
                            FeatureName = "usbPort",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fusb-icon.png?alt=media&token=3fce192b-6d2f-43f5-8e0b-3546c1e50e31",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4251)
                        },
                        new
                        {
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4255),
                            Description = "A backup tire stored in the vehicle for emergency replacements",
                            DisplayName = "Spare Tire",
                            FeatureName = "spareTire",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fspare_tire-icon.png?alt=media&token=01a8dc7b-e98c-479c-943c-e337e3964e8d",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4256)
                        },
                        new
                        {
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4260),
                            Description = "Displays video content for rear-seat entertainment during trips",
                            DisplayName = "DVD Monitor",
                            FeatureName = "dvdMonitor",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fdvd-icon.png?alt=media&token=49e66de4-ec15-42d5-9787-50f23ba0c074",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4261)
                        },
                        new
                        {
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4264),
                            Description = "Covers and protects the engine compartment from external elements",
                            DisplayName = "Bonnet",
                            FeatureName = "bonnet",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fbonnet-icon.png?alt=media&token=a39d6283-4a5a-48a9-8c6a-8c2d539cd05b",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4265)
                        },
                        new
                        {
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4270),
                            Description = "Automatically processes toll payments while driving",
                            DisplayName = "Etc",
                            FeatureName = "etc",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fetc-icon.png?alt=media&token=e2494201-b1ff-4cfa-982d-4618537ce4c5",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4271)
                        },
                        new
                        {
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4276),
                            Description = "Deploy in collisions to protect passengers from injury",
                            DisplayName = "Air bags",
                            FeatureName = "airbags",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fairbags-icon.png?alt=media&token=55c3c49f-1b88-4782-8124-7828a6df07f8",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4277)
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("CarId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageId = new Guid("0831c830-8ab9-41ee-8abe-aeea4f832715"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5217),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar11.jpg?alt=media&token=41cf30ec-f792-4074-9406-a5d2a98a49e6"
                        },
                        new
                        {
                            ImageId = new Guid("16931f6d-b074-4bd2-9082-3de35b6db9d5"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5226),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar12.jpg?alt=media&token=c1f10fdd-cb99-4c27-933d-4700acc9272e"
                        },
                        new
                        {
                            ImageId = new Guid("e33dfafe-cf13-43ba-93bc-9b150831123e"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5231),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar13.jpg?alt=media&token=2782d4ec-0184-47a7-8964-148e4c6928ae"
                        },
                        new
                        {
                            ImageId = new Guid("27e79248-04e4-4961-a0b1-cf22c2319ae4"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5236),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar14.jpg?alt=media&token=6ce903bb-ce8b-4c6d-bc34-d8a1b664f625"
                        },
                        new
                        {
                            ImageId = new Guid("bf8a664f-88fe-4e7c-b91c-427dd10970c2"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5246),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar21.jpg?alt=media&token=735db85a-0e4f-4645-a764-1657d1ccf7d0"
                        },
                        new
                        {
                            ImageId = new Guid("4d4c2964-6453-4522-923e-1688da305391"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5252),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar22.jpg?alt=media&token=745493d0-4f34-4c7f-bb8c-f8c891e01422"
                        },
                        new
                        {
                            ImageId = new Guid("91762bd8-9200-4d45-9ee8-e8f0e983e921"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5257),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar23.jpg?alt=media&token=fd7110ec-aa36-4610-a69d-b00abdf886ec"
                        },
                        new
                        {
                            ImageId = new Guid("5f11ba97-bde5-4400-b6dd-b4e02025a0d7"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5261),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar24.jpg?alt=media&token=263ace26-9d00-41d4-869c-760319e406dd"
                        },
                        new
                        {
                            ImageId = new Guid("119d2e54-a9c0-4b7c-87d6-5cd2f2501da9"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5266),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar31.jpg?alt=media&token=6c0188d7-d743-4e0b-9795-a0ceeae64dba"
                        },
                        new
                        {
                            ImageId = new Guid("24971c14-5f2f-41aa-886b-1c114186d3bc"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5270),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar32.jpg?alt=media&token=9a497c45-8b33-40ae-bf8a-86b29747324b"
                        },
                        new
                        {
                            ImageId = new Guid("782d4c8e-2605-4a2d-87ba-3d1f2c9eb4d6"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5275),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar33.jpg?alt=media&token=557246dd-3d64-45a5-97fa-9b122cd316c9"
                        },
                        new
                        {
                            ImageId = new Guid("dad87d5e-c756-4ee5-ae27-c3f84901c9d3"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5279),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar34.jpg?alt=media&token=d7874dde-8f83-4d86-a902-04ce22c9942c"
                        },
                        new
                        {
                            ImageId = new Guid("2263a83a-5199-4240-9ecb-b19701d1fcf5"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5284),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar41.jpg?alt=media&token=e8d9380a-0931-4215-a080-96204098774d"
                        },
                        new
                        {
                            ImageId = new Guid("6ebfaf1c-748f-484a-b8b7-b7ddac7c883d"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5288),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar42.jpg?alt=media&token=78c1211b-d7a7-45ed-a03a-09a442c2b529"
                        },
                        new
                        {
                            ImageId = new Guid("d898f1d5-cf63-4250-a8f7-c8cf25c61a46"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5293),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar43.jpg?alt=media&token=b994c70b-b366-44dc-bcbe-d4c6219ba189"
                        },
                        new
                        {
                            ImageId = new Guid("38e6db85-3e32-4077-804c-f2287d118fd0"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5298),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar44.jpg?alt=media&token=e55eeb29-93b0-47b3-911f-df204e877469"
                        },
                        new
                        {
                            ImageId = new Guid("03071ddf-22c3-4321-9cfc-4c1dd506a9a3"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5302),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar51.jpg?alt=media&token=6e55f0be-c666-4c50-a30e-44b4a703260d"
                        },
                        new
                        {
                            ImageId = new Guid("589b7e11-94c3-4c5b-b4cb-2b3d215be33b"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5307),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar52.jpg?alt=media&token=ad7a0fd8-b4eb-4326-a475-342a9e0b01b8"
                        },
                        new
                        {
                            ImageId = new Guid("82428e6a-19f6-4599-aae1-13712934b3f8"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5312),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar53.jpg?alt=media&token=c76e6223-2ca1-4bac-bd7b-dd3f18323f37"
                        },
                        new
                        {
                            ImageId = new Guid("155e7784-a812-4571-bead-f8d7ca2478b5"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5315),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar54.jpg?alt=media&token=ed8a9204-288e-44f8-b047-ba4a80d5a45e"
                        },
                        new
                        {
                            ImageId = new Guid("13aecfda-8e98-4c0e-abc0-e20f1d13e961"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5325),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar61.jpg?alt=media&token=fab2b814-962d-4098-839c-758fb97642e5"
                        },
                        new
                        {
                            ImageId = new Guid("c5de75b4-9631-43c0-8ac6-a9da568a967a"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5329),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar62.jpg?alt=media&token=159d9f2e-fad1-4846-876d-3c4b9fa1e720"
                        },
                        new
                        {
                            ImageId = new Guid("bfbbaa76-998f-4d46-bbfe-664be8c4f6a5"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5332),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar63.jpg?alt=media&token=34a62380-de76-46c7-9752-9b13e8cc7ac5"
                        },
                        new
                        {
                            ImageId = new Guid("90fe95a8-3617-4676-abfa-9f86ed314bbb"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5336),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar64.jpg?alt=media&token=9a4b198d-c2c4-4585-b424-fd2b326fc97c"
                        },
                        new
                        {
                            ImageId = new Guid("fdf80856-da90-4190-bf4e-66ed0601a4ba"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5340),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar65.jpg?alt=media&token=8761aa35-f030-4fa7-a020-66f0a6810090"
                        },
                        new
                        {
                            ImageId = new Guid("643c0c50-b89e-4d60-b339-28254d008738"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5345),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar66.jpg?alt=media&token=d3102c30-035b-47cd-a8f8-f66be7a24f6f"
                        },
                        new
                        {
                            ImageId = new Guid("146a6452-4bc4-4922-bb33-a69d1d0612dd"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5349),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar67.jpg?alt=media&token=63ef5ae3-3d82-4e38-8412-aaa93f6785b6"
                        },
                        new
                        {
                            ImageId = new Guid("53337daf-c5af-452f-802a-d8b829a9d068"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5353),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar71.jpg?alt=media&token=f67cdcdb-55a4-46da-bcab-a498b8eea245"
                        },
                        new
                        {
                            ImageId = new Guid("e746af29-8cfb-4f2a-b1d8-593f44e0acd7"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5358),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar72.jpg?alt=media&token=30a3ac2a-0797-4240-b65e-8a3ceb63a839"
                        },
                        new
                        {
                            ImageId = new Guid("de16b5e0-65e8-45d1-ae2c-a446febb4b0d"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5362),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar73.jpg?alt=media&token=1750f1a1-62c5-4ab9-87ad-89301f4bc9b2"
                        },
                        new
                        {
                            ImageId = new Guid("6c521908-21ff-4e8d-a8d0-4c05c8a2e5a7"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5367),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar74.jpg?alt=media&token=95622732-d623-4eda-aa62-6c8ee1e96f28"
                        },
                        new
                        {
                            ImageId = new Guid("113d7987-dea8-4093-8b09-3ee0de72bb3c"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5371),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar81.jpg?alt=media&token=22679c70-85f4-4b86-8934-fb1d2a60b1b9"
                        },
                        new
                        {
                            ImageId = new Guid("23fbf12e-52d0-4438-a9fe-f681d12b89fa"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5376),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar82.jpg?alt=media&token=de9c9bc7-c8e8-4969-b680-11fd990fe8a2"
                        },
                        new
                        {
                            ImageId = new Guid("1df708b5-2560-4664-89d6-6ee1e3b88d26"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5381),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar83.jpg?alt=media&token=127dc8ca-bcdb-42a1-9e7c-44e35ca985c8"
                        },
                        new
                        {
                            ImageId = new Guid("61c40521-3a6f-4a6a-816d-8c2a7f449997"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5387),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar84.jpg?alt=media&token=0c49d25b-e1c5-4b31-b5eb-a313baa44b5e"
                        },
                        new
                        {
                            ImageId = new Guid("bfbf38c4-5645-4392-9020-6c5b992ff46e"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5391),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar85.jpg?alt=media&token=8ab32d35-6b26-4fb7-8a5a-4e013161a768"
                        },
                        new
                        {
                            ImageId = new Guid("8df59a4b-c2fe-4023-8a1e-7f308c8f68b8"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5397),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar91.jpg?alt=media&token=466bda06-2bf1-493f-9dd5-eee4ce0a94ab"
                        },
                        new
                        {
                            ImageId = new Guid("d539cbdb-a20c-4fd9-ac69-21fcb067249b"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5401),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar92.jpg?alt=media&token=fc46713e-0c32-486c-9c6c-546318f09d9d"
                        },
                        new
                        {
                            ImageId = new Guid("a870408e-435b-4448-bb23-93bf329e40d5"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5405),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar93.jpg?alt=media&token=782b1c2f-49d2-4673-8101-330020231a01"
                        },
                        new
                        {
                            ImageId = new Guid("ec97accb-b58d-4677-b6c5-4c87e3441de9"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5410),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar94.jpg?alt=media&token=94d25ed1-c76b-4edf-be53-0fe909ec5307"
                        },
                        new
                        {
                            ImageId = new Guid("63d8419b-ae3c-4867-96e2-2773531291d3"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5414),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar101.jpg?alt=media&token=77127151-3472-4206-8540-6909ec874c71"
                        },
                        new
                        {
                            ImageId = new Guid("f0e7a8c5-16e7-4a32-bf1d-3cadafaf7153"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5419),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar102.jpg?alt=media&token=46f90372-9790-43f5-ae41-6f35c7961660"
                        },
                        new
                        {
                            ImageId = new Guid("fb35d1d2-5ff3-4016-86f0-df5d5657c736"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5423),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar103.jpg?alt=media&token=b9e6ed3c-1328-4935-9eab-d3335638e503"
                        },
                        new
                        {
                            ImageId = new Guid("8dd7c100-ccf9-4e7b-a2e6-aa3525698243"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(5429),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar104.jpg?alt=media&token=9688114d-001b-4f26-a5d8-562d9fb42bf7"
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Model", b =>
                {
                    b.Property<Guid>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ModelId");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            ModelId = new Guid("0ed1b055-dcd4-48ee-aeff-7478382f9e96"),
                            BrandId = new Guid("c6669c8e-f8a8-443c-8446-83c010b44ec0"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4706),
                            ModelName = "CX5 Deluxe",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4708)
                        },
                        new
                        {
                            ModelId = new Guid("f660d2b0-0444-4c02-b15a-2ebc871d8f4b"),
                            BrandId = new Guid("a1f14e7e-342b-4f17-b7fc-9e7ca13483b2"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4715),
                            ModelName = "VF6 Plus",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4716)
                        },
                        new
                        {
                            ModelId = new Guid("4e39763c-501a-47ea-9d11-f884de1e7e4e"),
                            BrandId = new Guid("de716878-747e-4b02-9fce-46d67a13c30f"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4721),
                            ModelName = "3008",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4722)
                        },
                        new
                        {
                            ModelId = new Guid("1dc0a8e3-19b1-45f0-aec8-a810722de8f5"),
                            BrandId = new Guid("9bb29e7a-ca23-4418-81d4-b9b66e7cf107"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4725),
                            ModelName = "Ecosport",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4727)
                        },
                        new
                        {
                            ModelId = new Guid("32234d9d-90f2-4011-ba7f-85ead67a98bd"),
                            BrandId = new Guid("1c38dc33-e4d6-4922-abc4-1fa8cfc314b2"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4730),
                            ModelName = "RX450H",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4731)
                        },
                        new
                        {
                            ModelId = new Guid("fdfdef71-0e39-48f0-8eec-71f5429ed285"),
                            BrandId = new Guid("c11c6f51-c207-4754-9372-046fb4a04c22"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4736),
                            ModelName = "Creta",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4737)
                        },
                        new
                        {
                            ModelId = new Guid("16fd3123-d971-422c-b2af-e47978c27f35"),
                            BrandId = new Guid("c11c6f51-c207-4754-9372-046fb4a04c22"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4741),
                            ModelName = "Tucson Premium",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4741)
                        },
                        new
                        {
                            ModelId = new Guid("affeb1d2-7eb3-4410-a7ca-e3b1adc3cc54"),
                            BrandId = new Guid("de716878-747e-4b02-9fce-46d67a13c30f"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4745),
                            ModelName = "2008 GT",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4746)
                        },
                        new
                        {
                            ModelId = new Guid("542d93fd-4bc2-48df-9e58-f12c17a96d79"),
                            BrandId = new Guid("b802da6e-e178-46f5-9884-442e0f1067dc"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4750),
                            ModelName = "ZS Standard",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4751)
                        },
                        new
                        {
                            ModelId = new Guid("6e18d51e-2964-4f16-a00c-0d4544671816"),
                            BrandId = new Guid("4e5784bd-10a3-4fb4-ad50-fb0304da90d9"),
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4757),
                            ModelName = "Innova",
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 281, DateTimeKind.Local).AddTicks(4758)
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RentalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PaymentId");

                    b.HasIndex("RentalId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Rental", b =>
                {
                    b.Property<Guid>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDayTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InsuranceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PickupLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RentalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RentalStatus")
                        .HasColumnType("int");

                    b.Property<string>("ReturnLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDayTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RentalId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("CarId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Review", b =>
                {
                    b.Property<Guid>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Author")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Flag")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReviewId");

                    b.HasIndex("Author");

                    b.HasIndex("CarId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Identity.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            DisplayName = "Khách Hàng",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = new Guid("c0278115-8549-4fad-890a-44f8e8fcc022"),
                            DisplayName = "Quản Lí",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = new Guid("ab8e4032-2d95-45cc-89c1-c039e9e8bc39"),
                            DisplayName = "Chủ Xe",
                            Name = "Owner",
                            NormalizedName = "CarOwener"
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Identity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VipExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VipStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "33c5ad95-b042-4d6c-a247-5a04ae4ed95a",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 373, DateTimeKind.Local).AddTicks(944),
                            Email = "quocdai@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Nguyen Quoc Dai",
                            LockoutEnabled = false,
                            NormalizedEmail = "QUOCDAI@GMAIL.COM",
                            NormalizedUserName = "DAINQ115",
                            PasswordHash = "AQAAAAIAAYagAAAAEJfgzI9km1VjT0iEVlKL7wzbBMUiD6gYNhlKgrvegIdc0hKZiNCiX4ZJ/tZ3o0lO3Q==",
                            PhoneNumber = "0932748924",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a5c8728a-2e88-4c35-8f36-9d8a917f6aa9",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 373, DateTimeKind.Local).AddTicks(919),
                            UserName = "dainq115"
                        },
                        new
                        {
                            Id = new Guid("9d7e87a9-b070-4607-a0b0-2d2322aece9b"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "69289fcf-ac66-4561-9921-8e9ccb73a238",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 475, DateTimeKind.Local).AddTicks(3529),
                            Email = "toanvan@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Van Huu Toan",
                            LockoutEnabled = false,
                            NormalizedEmail = "TOANVAN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAIuxCZuBgVW+jlyU8b2n59Qs8v5RGSrzUGTUt38DJEw6QFmkwmGYpJoH1f4L3bEAw==",
                            PhoneNumber = "0999998888",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "72fbc2a2-4846-442c-a2b1-93ad1ce15c90",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 475, DateTimeKind.Local).AddTicks(3505),
                            UserName = "vipro123"
                        },
                        new
                        {
                            Id = new Guid("0075ba2c-f60d-4f75-b9f1-f71579bc4fd2"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d30dd394-b2c2-4107-9e1b-b037a202968d",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 592, DateTimeKind.Local).AddTicks(4003),
                            Email = "khanhpham@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Nguyen Pham Khanh",
                            LockoutEnabled = false,
                            NormalizedEmail = "KHANHPHAM@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEFRefZ/PAv5ejEaijtqYdqRihUQfassui4hnRi0dSoiGAx1knWcpqS4rpht5Qw2x7w==",
                            PhoneNumber = "0969998878",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b357184f-03ae-41c6-864f-cbf242abc202",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 592, DateTimeKind.Local).AddTicks(3981),
                            UserName = "kuem113"
                        },
                        new
                        {
                            Id = new Guid("3b1a8845-765f-4d91-984a-4e8a9d7d376e"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b0845264-68e6-43a9-917b-05ecd63c42fe",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 691, DateTimeKind.Local).AddTicks(9136),
                            Email = "khaitoi@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Phan Van Khai",
                            LockoutEnabled = false,
                            NormalizedEmail = "KHAITOI@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAED2Zf+EexAqDniH1uFHH7gEchgc//on79eX1V1oCl7bbSKb7FbPwKxW5w8kkIAUHBw==",
                            PhoneNumber = "0777444499",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "514c2c83-4669-4f7d-9ddf-b80cb6e4aea6",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 691, DateTimeKind.Local).AddTicks(9111),
                            UserName = "xautrai123"
                        },
                        new
                        {
                            Id = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d3ee391b-bae5-4e43-af11-d31f2904e6a4",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 787, DateTimeKind.Local).AddTicks(4330),
                            Email = "quangdalat@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Quang La Tui",
                            LockoutEnabled = false,
                            NormalizedEmail = "QUANGDALAT@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEC2pG18R4AbIp1JOrrL9FL8LkvMGGZ5q6exOVZ9ee7tgUu/WtTCdVfFFROhcxpOpMw==",
                            PhoneNumber = "0999777712",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8c04f44c-9f7f-4d97-a454-0443be0f7df2",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 787, DateTimeKind.Local).AddTicks(4304),
                            UserName = "quangspa09"
                        },
                        new
                        {
                            Id = new Guid("1246b8e5-af73-4aa3-bdef-b8815e21a78b"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0a69c549-b2f5-4a86-967d-d56ebc24d736",
                            CreatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 878, DateTimeKind.Local).AddTicks(6732),
                            Email = "duythunglungtinhiu@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Pham Hoai Duy",
                            LockoutEnabled = false,
                            NormalizedEmail = "DUYTHUNGLUNGTINHIU",
                            PasswordHash = "AQAAAAIAAYagAAAAEJTcgyxW2BN9yrLvFpHA4g5+B6HYmNOmrKbDun3mgugBbR6/lYXB7Cbt31Kbe6SW4g==",
                            PhoneNumber = "0555666612",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f5f62afc-9431-417b-a59a-6374b5499a1b",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 9, 7, 13, 15, 5, 878, DateTimeKind.Local).AddTicks(6708),
                            UserName = "duypro113"
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Address", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Car", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.CarType", "CarType")
                        .WithMany("Cars")
                        .HasForeignKey("CarTypeId");

                    b.HasOne("MocatiCar.Core.Domain.Content.Model", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "User")
                        .WithMany("Cars")
                        .HasForeignKey("OwnerId");

                    b.Navigation("CarType");

                    b.Navigation("Model");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CarFeature", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("CarFeatures")
                        .HasForeignKey("CarId");

                    b.HasOne("MocatiCar.Core.Domain.Content.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId");

                    b.Navigation("Car");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Contract", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Rental", "Rental")
                        .WithMany("Contracts")
                        .HasForeignKey("RentalId");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Image", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("Images")
                        .HasForeignKey("CarId");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Model", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Payment", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Rental", "Rental")
                        .WithMany("Payments")
                        .HasForeignKey("RentalId");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Rental", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", null)
                        .WithMany("Rentals")
                        .HasForeignKey("AppUserId");

                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("Rentals")
                        .HasForeignKey("CarId");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Review", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("Author");

                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("Reviews")
                        .HasForeignKey("CarId");

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Car", b =>
                {
                    b.Navigation("CarFeatures");

                    b.Navigation("Images");

                    b.Navigation("Rentals");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CarType", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Model", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Rental", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Identity.AppUser", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Cars");

                    b.Navigation("Rentals");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
