// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoncatiCar.Data;

#nullable disable

namespace MoncatiCar.Data.Migrations
{
    [DbContext(typeof(MocatiContext))]
    [Migration("20240919123149_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.ToTable("AppUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("9d7e87a9-b070-4607-a0b0-2d2322aece9b")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("0075ba2c-f60d-4f75-b9f1-f71579bc4fd2")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("3b1a8845-765f-4d91-984a-4e8a9d7d376e")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("1246b8e5-af73-4aa3-bdef-b8815e21a78b")
                        },
                        new
                        {
                            RoleId = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            UserId = new Guid("8f3dbc12-27b8-49ac-8049-c67e065ce7c0")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens", (string)null);
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Address", b =>
                {
                    b.Property<Guid>("addressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("addressName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("commune")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.Property<string>("locationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("addressId");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Brand", b =>
                {
                    b.Property<Guid>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = new Guid("c6669c8e-f8a8-443c-8446-83c010b44ec0"),
                            BrandName = "Mazda",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A Japanese automaker known for its stylish designs, advanced technology, and driving pleasure. Mazda’s “Kodo” design philosophy and SkyActiv technology are key highlights.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("a1f14e7e-342b-4f17-b7fc-9e7ca13483b2"),
                            BrandName = "Vinfast",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A Vietnamese car manufacturer that quickly gained attention for its electric and gasoline vehicles. VinFast aims to bring Vietnamese-made cars to the global market with a focus on quality and innovation.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("de716878-747e-4b02-9fce-46d67a13c30f"),
                            BrandName = "Peugeot",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A French car brand with a long history, known for producing elegant and reliable vehicles. Peugeot is recognized for its sophisticated design, comfort, and European flair.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("9bb29e7a-ca23-4418-81d4-b9b66e7cf107"),
                            BrandName = "Ford",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An American automaker famous for its durable vehicles, including the iconic Ford Mustang and F-Series trucks. Ford has a significant influence on the global automotive industry.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("1c38dc33-e4d6-4922-abc4-1fa8cfc314b2"),
                            BrandName = "Lexus",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The luxury division of Toyota, Lexus is renowned for its refined craftsmanship, advanced technology, and smooth, comfortable rides. It’s a symbol of reliability and premium quality.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("c11c6f51-c207-4754-9372-046fb4a04c22"),
                            BrandName = "Hyundai",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A South Korean car manufacturer that offers a wide range of vehicles, known for their affordability, modern designs, and advanced features. Hyundai has rapidly grown to become a major global player.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("b802da6e-e178-46f5-9884-442e0f1067dc"),
                            BrandName = "Mg",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Originally a British brand, now owned by Chinese automaker SAIC. MG is known for affordable vehicles with a focus on modern technology and youthful appeal.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BrandId = new Guid("4e5784bd-10a3-4fb4-ad50-fb0304da90d9"),
                            BrandName = "Toyota",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "One of the largest and most reliable car manufacturers in the world. Toyota is known for its long-lasting vehicles, efficiency, and innovations like hybrid technology with models like the Prius.",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Car", b =>
                {
                    b.Property<Guid>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DeliveryFeePerKm")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FreeDeliveryWithinKm")
                        .HasColumnType("int");

                    b.Property<float?>("FuelConsumption")
                        .HasColumnType("real");

                    b.Property<int>("FuelType")
                        .HasColumnType("int");

                    b.Property<bool?>("InstantBooking")
                        .HasColumnType("bit");

                    b.Property<int?>("LimitKilometersPerDay")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxDeliveryDistance")
                        .HasColumnType("int");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("OverLimitFeePerKm")
                        .HasColumnType("int");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RentalStatus")
                        .HasColumnType("int");

                    b.Property<string>("RentalTerms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Transmission")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("discount")
                        .HasColumnType("real");

                    b.Property<string>("licensePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("CarTypeId");

                    b.HasIndex("ModelId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 10,
                            Description = "Mazda CX5 2017-2.0 Fuel efficient<br/>New, beautiful car, regularly maintained, clean…<br/>Spacious, comfortable car, suitable for family travel.<br/>Car has rear camera, sunroof, dash cam, entertainment system and many other amenities…",
                            FreeDeliveryWithinKm = 5,
                            FuelConsumption = 7f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 100,
                            Location = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 10,
                            ModelId = new Guid("0ed1b055-dcd4-48ee-aeff-7478382f9e96"),
                            OverLimitFeePerKm = 200,
                            OwnerId = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87"),
                            PricePerDay = 861000m,
                            RentalStatus = 0,
                            Seats = 4,
                            Slug = "mazda-cx5-deluxe-2017-vq57kp",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 20f,
                            licensePlate = "15A-341.79",
                            year = 2017
                        },
                        new
                        {
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 10,
                            Description = "Beautiful new family car, original interior, clean, equipped with 3M crystalline film, the car is very cool in hot weather, coated with anti-nail and noise-proof tires.<br/>",
                            FreeDeliveryWithinKm = 10,
                            FuelConsumption = 381f,
                            FuelType = 2,
                            InstantBooking = false,
                            LimitKilometersPerDay = 200,
                            Location = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("f660d2b0-0444-4c02-b15a-2ebc871d8f4b"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87"),
                            PricePerDay = 953000m,
                            RentalStatus = 1,
                            Seats = 5,
                            Slug = "vinfast-vf6-plus-2024-j7tjxw",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 15f,
                            licensePlate = "51L-216.13",
                            year = 2024
                        },
                        new
                        {
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 0,
                            Description = "Great car! Very comfortable and spacious for my family trip",
                            FreeDeliveryWithinKm = 0,
                            FuelConsumption = 10f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 1, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 1, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("4e39763c-501a-47ea-9d11-f884de1e7e4e"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87"),
                            PricePerDay = 1343000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "peugeot-3008-2022-wlh7hm",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 0f,
                            licensePlate = "51K-418.61",
                            year = 2022
                        },
                        new
                        {
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 0,
                            Description = "The car is in excellent condition and very clean. Highly recommended!",
                            FreeDeliveryWithinKm = 0,
                            FuelConsumption = 9f,
                            FuelType = 0,
                            InstantBooking = true,
                            LimitKilometersPerDay = 50,
                            Location = "Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
                            LocationDetails = "Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 7,
                            ModelId = new Guid("1dc0a8e3-19b1-45f0-aec8-a810722de8f5"),
                            OverLimitFeePerKm = 100,
                            OwnerId = new Guid("9d7e87a9-b070-4607-a0b0-2d2322aece9b"),
                            PricePerDay = 666000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "ford-ecosport-2015-duz4bh",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 0f,
                            licensePlate = "51F-320.56",
                            year = 2015
                        },
                        new
                        {
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 10,
                            Description = "Lexus RX 450h automatic transmission manufactured in 2010 Japan<br/>Last inspection date: 7/7/2023<br/>Clean and tidy family car",
                            FreeDeliveryWithinKm = 5,
                            FuelConsumption = 7f,
                            FuelType = 0,
                            InstantBooking = true,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 2, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 2, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("32234d9d-90f2-4011-ba7f-85ead67a98bd"),
                            OverLimitFeePerKm = 150,
                            OwnerId = new Guid("9d7e87a9-b070-4607-a0b0-2d2322aece9b"),
                            PricePerDay = 3706000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "lexus-rx450h-2010-4urh11",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 0f,
                            licensePlate = "51A-900.56",
                            year = 2010
                        },
                        new
                        {
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 10,
                            Description = "Safety:\nHyundai Creta has familiar features such as: ABS – EBD – BA brakes, electronic balance, traction control, hill start assist, tire pressure sensor, parking assist sensor, rear camera, 6 airbags…<br/>Convenience: Leather seats, Bose standard sound system, navigation, speed warning, electronic handbrake…",
                            FreeDeliveryWithinKm = 5,
                            FuelConsumption = 6f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 9, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 9, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("fdfdef71-0e39-48f0-8eec-71f5429ed285"),
                            OverLimitFeePerKm = 150,
                            OwnerId = new Guid("0075ba2c-f60d-4f75-b9f1-f71579bc4fd2"),
                            PricePerDay = 1033000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "hyundai-creta-2022-wesu5v",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 0f,
                            licensePlate = "51K-392.51",
                            year = 2022
                        },
                        new
                        {
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 15,
                            Description = "Comfortable 5-seater car, beautiful car, strong engine, full interior and amenities",
                            FreeDeliveryWithinKm = 7,
                            FuelConsumption = 7f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 2, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 2, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 4,
                            ModelId = new Guid("16fd3123-d971-422c-b2af-e47978c27f35"),
                            OverLimitFeePerKm = 100,
                            OwnerId = new Guid("0075ba2c-f60d-4f75-b9f1-f71579bc4fd2"),
                            PricePerDay = 1073000m,
                            RentalStatus = 0,
                            Seats = 5,
                            Slug = "hyundai-tucson-premium-2021-nixl5v",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 10f,
                            licensePlate = "30K-605.01",
                            year = 2021
                        },
                        new
                        {
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 0,
                            Description = "The 2021 PEUGEOT 2008 GT is a stylish and compact SUV featuring a sporty design, advanced technology, and efficient engine options. It offers a comfortable and spacious interior with premium materials, making it ideal for urban driving and longer journeys",
                            FreeDeliveryWithinKm = 0,
                            FuelConsumption = 5f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 0,
                            Location = "Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
                            LocationDetails = "Thành phố Thủ Đức, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("affeb1d2-7eb3-4410-a7ca-e3b1adc3cc54"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d"),
                            PricePerDay = 1101000m,
                            RentalStatus = 0,
                            Seats = 4,
                            Slug = "peugeot-2008-gt-2022-x5uac6",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 0f,
                            licensePlate = "51H-815.11",
                            year = 2021
                        },
                        new
                        {
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 20,
                            Description = "The 2021 GARAGES ZS SMART UP STANDARD is a compact SUV designed for urban driving. It features a modern exterior with sleek lines, a spacious and well-equipped interior, and smart technology integration. The vehicle offers a smooth ride with fuel-efficient engine options, making it a practical choice for everyday use.",
                            FreeDeliveryWithinKm = 0,
                            FuelConsumption = 4f,
                            FuelType = 0,
                            InstantBooking = true,
                            LimitKilometersPerDay = 0,
                            Location = "Quận 9, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận 9, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 0,
                            ModelId = new Guid("542d93fd-4bc2-48df-9e58-f12c17a96d79"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d"),
                            PricePerDay = 976000m,
                            RentalStatus = 0,
                            Seats = 4,
                            Slug = "mg-zs-standard-2022-k18fhr",
                            Status = true,
                            Transmission = 1,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 0f,
                            licensePlate = "21A-134.52",
                            year = 2022
                        },
                        new
                        {
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryFeePerKm = 0,
                            Description = "The 2021 Toyota Innova E is a versatile and reliable MPV designed for family comfort and practicality. It boasts a spacious interior with ample seating and cargo space, advanced safety features, and a smooth driving experience.",
                            FreeDeliveryWithinKm = 8,
                            FuelConsumption = 9f,
                            FuelType = 0,
                            InstantBooking = false,
                            LimitKilometersPerDay = 150,
                            Location = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            LocationDetails = "Quận Bình Thạnh, Thành phố Hồ Chí Minh",
                            MaxDeliveryDistance = 5,
                            ModelId = new Guid("6e18d51e-2964-4f16-a00c-0d4544671816"),
                            OverLimitFeePerKm = 0,
                            OwnerId = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d"),
                            PricePerDay = 821000m,
                            RentalStatus = 0,
                            Seats = 7,
                            Slug = "toyota-innova-2020-3ymd75",
                            Status = true,
                            Transmission = 0,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            discount = 20f,
                            licensePlate = "51L-288.32",
                            year = 2020
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CarFeature", b =>
                {
                    b.Property<Guid>("CarFeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CarFeatureId");

                    b.HasIndex("CarId");

                    b.HasIndex("FeatureId");

                    b.ToTable("CarFeatures");

                    b.HasData(
                        new
                        {
                            CarFeatureId = new Guid("fe73b947-db5d-4e6a-82c7-05d9bd72eb2b"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("16271fbb-5ddc-4c0e-a5f9-564cfc60ed7f"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("df1adcd7-fee5-4e22-973f-e5ad9e96f896"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fce2030c-1f80-4113-834b-514d24b4ab0a"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a4c2004e-05d3-4bac-9001-0af00dbb2894"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("302c2e35-715a-422d-9742-bdea2c1cbc5a"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("50b13b74-d759-4b28-870e-bd8a91c7bd41"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d")
                        },
                        new
                        {
                            CarFeatureId = new Guid("41ad7499-5731-4ec0-a46f-3bc8efd4ae00"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fa32d9fe-2216-4563-b317-ada041967745"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("15e91a00-e75b-4066-a609-042aba04427b"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("950f50eb-262b-4c10-9951-084e6bf1a9da"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ff82bc6d-0dd3-4abe-95c0-1574db47d5e6"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("988432dc-39f4-4f9d-9cd4-9a2e95655a09"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("0ef8ba4a-c639-4b9f-ba74-2ab9bf39189b"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("2907d770-7f92-438e-a55b-51985800ff12"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fbc8d5cb-dfd0-4163-94c9-ddb24dcb3d65"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("079756fc-ae78-4890-80ac-36dd0d19f8ad"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a31a493e-5156-4998-86af-5afc1ff52a16"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("2f460022-5276-434d-ad41-3fe68c80792d"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ad11686a-7ac9-4184-8cd4-72877bf83af5"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e4d4f98d-15ef-465b-a7eb-f41af002999b"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("1fa45773-809a-4223-87d5-69425bcbe09f"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("20494fd2-a56f-4a88-a4c6-366451a0abac"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("15b1fcb7-df6f-484f-b156-0397fcdc31b2"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("082a060b-e423-405d-a8f2-8bf9c591ed05"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e1cae567-8c0a-4121-9f50-0fca45ca0610"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("7b2a7154-6bc5-49ee-acbe-fec9ae05ed1b"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("508b05b5-47b4-41e1-9c30-2897596707d4"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("99e8875b-3c64-4b6e-9fb8-81e8a6621c47"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ea3b2c59-69ea-481b-b1c8-288e15eab719"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("46de91f8-5992-4c51-b3fb-b015951add59"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a3fe0370-6f05-441a-b018-d122e6ca245a"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9073f583-2f41-4ece-8ac9-b30b12f877f3"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("672d71f6-8ba7-4fe2-b12c-05176a929dc9"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("f5a35e6c-c1b0-47af-9e05-e82501dd3bf8"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("514d0c04-5773-4988-83e9-b633fc7ef640"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("053a06df-80c4-447e-8a04-b409e36df128"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fa682954-9a2d-4554-8ea8-3c6bb006a1da"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("70232ce4-6214-4b66-bb51-0a21e05c7d26"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("746292dc-d05b-4e4e-991c-2ed5ae7bfc09"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c7194546-1d51-44aa-b888-9e16e824c18b"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6bc534b7-1ae5-4770-af43-b0c8ba5cc873"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6f9a5785-de0e-4016-b09d-b7b1d7c83844"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("bffd7cb5-4435-450b-af42-d10cfa6bc589"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("1ff8b2f8-9323-4a90-bd74-b6c29209c923"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9a52b843-b3f5-40fb-8248-bbb9e81d4797"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c068474f-cbe9-4f1d-9e81-1c5e2e2e360f"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9b5e049a-25d5-4952-ad42-9f73a49fd900"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("17a50fd1-54e5-410d-b100-9e953b57e371"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("3ed52bec-c009-4c55-b75f-6f51cb22cc00"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("86199ab8-6c10-4a0b-902d-d1300f2c66be"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("7648265b-0b2f-4123-8c9b-881f72e26220"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("27d42c7c-979f-4f86-8be9-2263cf9efa9e"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("044ab42c-63be-4707-8f3f-d52e6f4635ff"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9d81c19b-cfc9-4611-9303-ebe160c49d63"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("148b9eb1-262a-4790-895d-44dd8bff3b57"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("067984a1-8e59-49a5-8f19-e2b21007bfbe"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("3609cbf9-c674-4a14-8a1b-2d2e56ff5a79"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("f74c7200-81e6-464c-be29-79eef44010f6"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d89bc425-2483-4db8-b9b8-ea47677ef0a6"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("59346b40-607a-4ea6-8a18-4c2775c4e805"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("68585906-378b-4614-9418-b39d617c876e"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("3fe3180d-ced0-487c-9b79-49869ba451e1"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("9036eb10-bdfc-4d35-9a12-a791a92b23f9"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("29f6ac6b-aa2b-4f0a-a979-ce19feb8efc2"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("8326499b-1d46-47ff-a5a0-c6b18d2fc1b6"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b26e2d35-1071-4f38-9f38-47c856814e13"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("0471f889-d92c-467f-95da-7a414c815511"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("20ff9b08-455b-4558-8b1c-e38524ea4810"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("0f25fbc9-c156-4ec0-8136-1dee653f7ae8"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("da1491f5-d194-43de-bbb1-45b0ac6f454a"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("df2836d4-d36a-4573-b25d-ba8300d87cbd"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("07e0f89d-d0bc-4e51-8aa2-fe6d21017ca8"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fecde799-76d5-4336-87f8-54d732ad0230"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("2c5f7936-fb99-4b0a-b847-b25a94f84acd"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d")
                        },
                        new
                        {
                            CarFeatureId = new Guid("776035fe-50a4-4f69-9afa-3552b797443a"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fc4aac7d-dfb9-4642-bdad-d0efcbef115b"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("120b5ed9-cfd3-4dc9-bbfb-e306abea79c8"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("1f0fad83-8fd3-49db-9015-bd55b79df026"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("766066cb-be87-44dd-81e3-86195e99cf11"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("6ebf1d36-35fa-4cad-9d6f-671476d02020")
                        },
                        new
                        {
                            CarFeatureId = new Guid("09b3778d-8331-4847-9c14-cceaa016995a"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("0570ea21-f62f-41f5-8411-ccd0c52a8f0a"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("4c8bf08a-9d1f-4e16-a58e-779de2fadfaf"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("718ac240-acce-462a-b337-f703bcf45ced"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("da281637-8d9b-4e51-8ddf-bbb6ed8f0f7f"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ce64af31-5ebb-42b9-bc9d-e359e047ca5f"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("135a9700-5bfc-4924-a4aa-0fb411b3d15e"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("d2e32964-c385-4958-ab17-eac73600db7f"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("bc4ae908-0818-4de3-9d11-991f73b7bfa3"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9")
                        },
                        new
                        {
                            CarFeatureId = new Guid("806b8ddf-752e-4c12-ab51-4caa61dbc433"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("12256366-9953-4eff-9951-3d6eac8b1e46"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("152eca54-5a91-4ab0-893a-c7c7cef48bd2"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("cf78228f-3f72-4251-8618-dd7f0d0f2015"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a1a94ffe-e690-45f2-a5e8-37deca8a2b46"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("c82934e2-241e-48d4-869b-4461498748d1"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("61b9d011-fefc-4ba9-b564-16d67e8bb29a"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("68a44d03-ff44-41f0-b570-cd44c15ecd17"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("0e5cd313-eff8-48fa-8b1b-b35435b223dd"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("7071b1d3-79b7-459a-b263-e7a1df54aea0"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("05c54fac-f38a-4ea5-b5fe-0302a6635275"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("07458843-3370-401d-8d48-b286fd34b7e6"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("bac0d039-25be-41ab-b52c-4190c1025a85"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("af4d6a03-6c36-4839-a65f-c711f15c144d"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b0ab6958-6127-4a35-a936-5cce23adce28"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fc4e4179-4ae2-42b7-8fa2-1155f44272f8"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167")
                        },
                        new
                        {
                            CarFeatureId = new Guid("ae4d0d10-dc57-4701-80fe-779ac5e8b754"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("968bd70b-c212-4b82-90e7-3a1f7f8bf387"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("f8ff368b-b1f6-4294-93ff-d68f7b800ad0"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("921d1060-ce6f-45e3-bd56-91634924e06a"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("399a2451-1ad2-4270-9039-757621edc5e0"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("1b8b1658-00ab-4d28-a162-0cf193d3f349"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("fb016c3b-11d6-4908-9a3a-0ebcc771ac3a"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e3e42566-6f06-473d-95e3-554c10559b2e"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("656ad10c-92b6-43c5-b366-1e2a4f4ccc28"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("e3972873-e530-4615-80e3-6f9f6102643e"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("2c0ad1bc-7823-4958-9148-7471c46b4144"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("5955a5be-2ad6-4f1f-b0c0-120b32ec8c7a"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a1385065-bd31-4c3d-8006-11c0112026cb"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b43e4da5-48d5-4c56-905b-f6a95a4c2726"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5")
                        },
                        new
                        {
                            CarFeatureId = new Guid("855e5e30-0bc0-4b0a-aaca-77ba30676024"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b561382d-2f64-489c-818f-2faf7e082be5"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("38e97de6-799d-4da8-8444-6b704e921cce"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("69da50a8-153e-43dd-8f8e-7432c2a7b7b4"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("f7851b81-2097-4b2c-8af8-a8d2de9fa3c1"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac")
                        },
                        new
                        {
                            CarFeatureId = new Guid("df8d02eb-9fd6-448d-bbbf-e20ab0056053"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("981c5781-27d6-455b-88c3-044f01bcbba8"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("2346e549-7e1d-4f06-aaf6-db49730bec34"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        },
                        new
                        {
                            CarFeatureId = new Guid("4f53cd03-427e-4845-80f8-bd35d58dc202"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("222b0f8e-7f63-4eaa-ad9a-c1a8aa308814"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("0d9bab23-c31e-4364-b4d4-f76280400835"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641")
                        },
                        new
                        {
                            CarFeatureId = new Guid("a7596378-7b30-4ad9-8b0b-01a2b6ee3c2e"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485")
                        },
                        new
                        {
                            CarFeatureId = new Guid("b953779c-2085-444a-956a-df8c829964f5"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1")
                        },
                        new
                        {
                            CarFeatureId = new Guid("de8d2e77-58fc-43cc-8e56-3dbe95f87fab"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0")
                        },
                        new
                        {
                            CarFeatureId = new Guid("3ccae9df-5e45-4e3d-949a-600e96501317"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63")
                        },
                        new
                        {
                            CarFeatureId = new Guid("6a1b61c1-400c-4bb3-903e-bd6612f3cf0f"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e")
                        },
                        new
                        {
                            CarFeatureId = new Guid("2c155f8a-5c16-466f-b8af-3b6325639fc2"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c")
                        },
                        new
                        {
                            CarFeatureId = new Guid("796f3fef-7957-4b5d-9596-afcf5da2684f"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b")
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CarType", b =>
                {
                    b.Property<Guid>("CarTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CarTypeId");

                    b.ToTable("CarTypes");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Contract", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractTerms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RentalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Signature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContactId");

                    b.HasIndex("RentalId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.FavoriteCar", b =>
                {
                    b.Property<Guid>("FavoriteCarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FavoriteCarId");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("FavoriteCars");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Feature", b =>
                {
                    b.Property<Guid>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FeatureId");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            FeatureId = new Guid("845a0c8f-59d5-4abb-bdc9-bf95d4d0ce1c"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Provides real-time navigation and location tracking while driving",
                            DisplayName = "Map",
                            FeatureName = "map",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fmap-icon.png?alt=media&token=ebf5968e-074f-4f5f-a20c-9020b5dfac7b",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("533a7038-190b-4830-8125-5d2aacb7174e"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Enables wireless connection for hands-free calls and audio streaming",
                            DisplayName = "Bluetooth",
                            FeatureName = "bluetooth",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fbluetooth-icon.png?alt=media&token=422658da-d565-46e6-9e8f-b0ffccbb77dd",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("274aa3a0-05f8-4ff0-b100-e70ddb0d39d9"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Offers a 360-degree view around the vehicle for safer maneuvering",
                            DisplayName = "Camera 360",
                            FeatureName = "camera360",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2F360_camera-icon.png?alt=media&token=12ef3912-ad25-4216-9d8a-aa3a10f3d956",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("c4d9f42e-6c19-4ee3-b9ea-6b004aa1dfa3"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Assists in parking by displaying rearview visuals on the screen",
                            DisplayName = "Parking Camera",
                            FeatureName = "parkingCamera",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fparking_camera-icon.png?alt=media&token=39675fd9-2e15-4275-a7e1-085a75fb491f",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("be392eff-ef38-4039-94ec-7922f315ea6a"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Records front road footage for safety and evidence during drives",
                            DisplayName = "Dash Camera",
                            FeatureName = "dashCamera",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fdash_camera-icon.png?alt=media&token=e863e966-7ce5-432f-9629-bd72fcdfcd1f",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("182612c2-4fbf-46d9-bee0-9e1a10c29ff5"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Displays rear visuals to aid in reversing safely",
                            DisplayName = "Reverse Camera",
                            FeatureName = "reverseCamera",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Freverse_camera-icon.png?alt=media&token=fff470fe-095c-4b9e-ac98-aa31827a6f91",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("e285ec6a-3119-43b5-8edb-209fa732a77d"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Monitors tire pressure to ensure optimal driving safety",
                            DisplayName = "Tire Pressure Monitor",
                            FeatureName = "tirePressureMonitor",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Ftpms-icon.png?alt=media&token=5d93995e-c886-430c-843b-a80fb6ba3f46",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("f8ad09a1-d149-44c9-ac14-d5c8cb1d4167"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Detects collisions and triggers safety mechanisms during impacts",
                            DisplayName = "Impact Sensor",
                            FeatureName = "impactSensor",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fimpact_sensor-icon.png?alt=media&token=1bc9001d-e5ca-4f48-98f8-dc86934cebc0",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("4481e46d-e85b-4870-a210-cdfea8932641"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Projects essential driving information onto the windshield",
                            DisplayName = "Head Up",
                            FeatureName = "headUp",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fhead_up-icon.png?alt=media&token=63087d56-26a4-4f72-affc-3c5d55c33f31",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("25814c9e-4ee4-4f36-a973-44cf0cf64485"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Provides an open roof option for natural light and ventilation",
                            DisplayName = "Sun Roof",
                            FeatureName = "sunRoof",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fsunroof-icon.png?alt=media&token=88b4101d-1fec-40c0-9534-989e39d08516",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("9501c63f-e7ca-4ef6-898e-9c8a23f4edd1"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Offers satellite-based navigation and route guidance",
                            DisplayName = "GPS",
                            FeatureName = "gps",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fgps-icon.png?alt=media&token=39ae42c8-a678-4f05-b5dd-9e20eb42d31f",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("6ebf1d36-35fa-4cad-9d6f-671476d02020"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Secures infants in a specially designed seat for maximum safety",
                            DisplayName = "Baby Seat",
                            FeatureName = "babySeat",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fbabyseat-icon.png?alt=media&token=2ad93b19-7448-46f9-9029-19871a357eb6",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("59df0181-9f39-4f9c-b41f-2a0f3d6360d0"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Allows charging and connecting devices to the vehicle's system",
                            DisplayName = "USB Port",
                            FeatureName = "usbPort",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fusb-icon.png?alt=media&token=3fce192b-6d2f-43f5-8e0b-3546c1e50e31",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("905d9d8f-7b09-4536-82d1-d15b938b2dac"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A backup tire stored in the vehicle for emergency replacements",
                            DisplayName = "Spare Tire",
                            FeatureName = "spareTire",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fspare_tire-icon.png?alt=media&token=01a8dc7b-e98c-479c-943c-e337e3964e8d",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("defbc09e-9f00-49b9-a37e-592a17cecc63"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Displays video content for rear-seat entertainment during trips",
                            DisplayName = "DVD Monitor",
                            FeatureName = "dvdMonitor",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fdvd-icon.png?alt=media&token=49e66de4-ec15-42d5-9787-50f23ba0c074",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("06653486-dec4-4054-ba49-c3a63490453e"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Covers and protects the engine compartment from external elements",
                            DisplayName = "Bonnet",
                            FeatureName = "bonnet",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fbonnet-icon.png?alt=media&token=a39d6283-4a5a-48a9-8c6a-8c2d539cd05b",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("057670f0-ab14-41bf-b5f0-42c0bdcc069c"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Automatically processes toll payments while driving",
                            DisplayName = "Etc",
                            FeatureName = "etc",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fetc-icon.png?alt=media&token=e2494201-b1ff-4cfa-982d-4618537ce4c5",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            FeatureId = new Guid("f761d066-304f-49f7-b988-3aca64536d9b"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Deploy in collisions to protect passengers from injury",
                            DisplayName = "Air bags",
                            FeatureName = "airbags",
                            Icon = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Car%20Features%2Fairbags-icon.png?alt=media&token=55c3c49f-1b88-4782-8124-7828a6df07f8",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("CarId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageId = new Guid("0831c830-8ab9-41ee-8abe-aeea4f832715"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar11.jpg?alt=media&token=41cf30ec-f792-4074-9406-a5d2a98a49e6"
                        },
                        new
                        {
                            ImageId = new Guid("16931f6d-b074-4bd2-9082-3de35b6db9d5"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar12.jpg?alt=media&token=c1f10fdd-cb99-4c27-933d-4700acc9272e"
                        },
                        new
                        {
                            ImageId = new Guid("e33dfafe-cf13-43ba-93bc-9b150831123e"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar13.jpg?alt=media&token=2782d4ec-0184-47a7-8964-148e4c6928ae"
                        },
                        new
                        {
                            ImageId = new Guid("27e79248-04e4-4961-a0b1-cf22c2319ae4"),
                            CarId = new Guid("87ffac08-1eb6-4c3f-8ec8-977860913635"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar14.jpg?alt=media&token=6ce903bb-ce8b-4c6d-bc34-d8a1b664f625"
                        },
                        new
                        {
                            ImageId = new Guid("bf8a664f-88fe-4e7c-b91c-427dd10970c2"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar21.jpg?alt=media&token=735db85a-0e4f-4645-a764-1657d1ccf7d0"
                        },
                        new
                        {
                            ImageId = new Guid("4d4c2964-6453-4522-923e-1688da305391"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar22.jpg?alt=media&token=745493d0-4f34-4c7f-bb8c-f8c891e01422"
                        },
                        new
                        {
                            ImageId = new Guid("91762bd8-9200-4d45-9ee8-e8f0e983e921"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar23.jpg?alt=media&token=fd7110ec-aa36-4610-a69d-b00abdf886ec"
                        },
                        new
                        {
                            ImageId = new Guid("5f11ba97-bde5-4400-b6dd-b4e02025a0d7"),
                            CarId = new Guid("95cf0585-b940-4afb-926d-01d9a3a27259"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar24.jpg?alt=media&token=263ace26-9d00-41d4-869c-760319e406dd"
                        },
                        new
                        {
                            ImageId = new Guid("119d2e54-a9c0-4b7c-87d6-5cd2f2501da9"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar31.jpg?alt=media&token=6c0188d7-d743-4e0b-9795-a0ceeae64dba"
                        },
                        new
                        {
                            ImageId = new Guid("24971c14-5f2f-41aa-886b-1c114186d3bc"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar32.jpg?alt=media&token=9a497c45-8b33-40ae-bf8a-86b29747324b"
                        },
                        new
                        {
                            ImageId = new Guid("782d4c8e-2605-4a2d-87ba-3d1f2c9eb4d6"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar33.jpg?alt=media&token=557246dd-3d64-45a5-97fa-9b122cd316c9"
                        },
                        new
                        {
                            ImageId = new Guid("dad87d5e-c756-4ee5-ae27-c3f84901c9d3"),
                            CarId = new Guid("c0ee3730-2717-4f50-8294-cf13437bbc2b"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar34.jpg?alt=media&token=d7874dde-8f83-4d86-a902-04ce22c9942c"
                        },
                        new
                        {
                            ImageId = new Guid("2263a83a-5199-4240-9ecb-b19701d1fcf5"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar41.jpg?alt=media&token=e8d9380a-0931-4215-a080-96204098774d"
                        },
                        new
                        {
                            ImageId = new Guid("6ebfaf1c-748f-484a-b8b7-b7ddac7c883d"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar42.jpg?alt=media&token=78c1211b-d7a7-45ed-a03a-09a442c2b529"
                        },
                        new
                        {
                            ImageId = new Guid("d898f1d5-cf63-4250-a8f7-c8cf25c61a46"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar43.jpg?alt=media&token=b994c70b-b366-44dc-bcbe-d4c6219ba189"
                        },
                        new
                        {
                            ImageId = new Guid("38e6db85-3e32-4077-804c-f2287d118fd0"),
                            CarId = new Guid("8705f403-06bc-4983-8c81-86310959cc37"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar44.jpg?alt=media&token=e55eeb29-93b0-47b3-911f-df204e877469"
                        },
                        new
                        {
                            ImageId = new Guid("03071ddf-22c3-4321-9cfc-4c1dd506a9a3"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar51.jpg?alt=media&token=6e55f0be-c666-4c50-a30e-44b4a703260d"
                        },
                        new
                        {
                            ImageId = new Guid("589b7e11-94c3-4c5b-b4cb-2b3d215be33b"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar52.jpg?alt=media&token=ad7a0fd8-b4eb-4326-a475-342a9e0b01b8"
                        },
                        new
                        {
                            ImageId = new Guid("82428e6a-19f6-4599-aae1-13712934b3f8"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar53.jpg?alt=media&token=c76e6223-2ca1-4bac-bd7b-dd3f18323f37"
                        },
                        new
                        {
                            ImageId = new Guid("155e7784-a812-4571-bead-f8d7ca2478b5"),
                            CarId = new Guid("7ac71700-7a87-45b6-9120-19d4ed3933fa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar54.jpg?alt=media&token=ed8a9204-288e-44f8-b047-ba4a80d5a45e"
                        },
                        new
                        {
                            ImageId = new Guid("13aecfda-8e98-4c0e-abc0-e20f1d13e961"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar61.jpg?alt=media&token=fab2b814-962d-4098-839c-758fb97642e5"
                        },
                        new
                        {
                            ImageId = new Guid("c5de75b4-9631-43c0-8ac6-a9da568a967a"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar62.jpg?alt=media&token=159d9f2e-fad1-4846-876d-3c4b9fa1e720"
                        },
                        new
                        {
                            ImageId = new Guid("bfbbaa76-998f-4d46-bbfe-664be8c4f6a5"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar63.jpg?alt=media&token=34a62380-de76-46c7-9752-9b13e8cc7ac5"
                        },
                        new
                        {
                            ImageId = new Guid("90fe95a8-3617-4676-abfa-9f86ed314bbb"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar64.jpg?alt=media&token=9a4b198d-c2c4-4585-b424-fd2b326fc97c"
                        },
                        new
                        {
                            ImageId = new Guid("fdf80856-da90-4190-bf4e-66ed0601a4ba"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar65.jpg?alt=media&token=8761aa35-f030-4fa7-a020-66f0a6810090"
                        },
                        new
                        {
                            ImageId = new Guid("643c0c50-b89e-4d60-b339-28254d008738"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar66.jpg?alt=media&token=d3102c30-035b-47cd-a8f8-f66be7a24f6f"
                        },
                        new
                        {
                            ImageId = new Guid("146a6452-4bc4-4922-bb33-a69d1d0612dd"),
                            CarId = new Guid("e9743276-25fd-4b47-a8ac-be13f27d2a53"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar67.jpg?alt=media&token=63ef5ae3-3d82-4e38-8412-aaa93f6785b6"
                        },
                        new
                        {
                            ImageId = new Guid("53337daf-c5af-452f-802a-d8b829a9d068"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar71.jpg?alt=media&token=f67cdcdb-55a4-46da-bcab-a498b8eea245"
                        },
                        new
                        {
                            ImageId = new Guid("e746af29-8cfb-4f2a-b1d8-593f44e0acd7"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar72.jpg?alt=media&token=30a3ac2a-0797-4240-b65e-8a3ceb63a839"
                        },
                        new
                        {
                            ImageId = new Guid("de16b5e0-65e8-45d1-ae2c-a446febb4b0d"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar73.jpg?alt=media&token=1750f1a1-62c5-4ab9-87ad-89301f4bc9b2"
                        },
                        new
                        {
                            ImageId = new Guid("6c521908-21ff-4e8d-a8d0-4c05c8a2e5a7"),
                            CarId = new Guid("1e83d72d-ad11-4f9f-b342-b39a2ef7a2f8"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar74.jpg?alt=media&token=95622732-d623-4eda-aa62-6c8ee1e96f28"
                        },
                        new
                        {
                            ImageId = new Guid("113d7987-dea8-4093-8b09-3ee0de72bb3c"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar81.jpg?alt=media&token=22679c70-85f4-4b86-8934-fb1d2a60b1b9"
                        },
                        new
                        {
                            ImageId = new Guid("23fbf12e-52d0-4438-a9fe-f681d12b89fa"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar82.jpg?alt=media&token=de9c9bc7-c8e8-4969-b680-11fd990fe8a2"
                        },
                        new
                        {
                            ImageId = new Guid("1df708b5-2560-4664-89d6-6ee1e3b88d26"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar83.jpg?alt=media&token=127dc8ca-bcdb-42a1-9e7c-44e35ca985c8"
                        },
                        new
                        {
                            ImageId = new Guid("61c40521-3a6f-4a6a-816d-8c2a7f449997"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar84.jpg?alt=media&token=0c49d25b-e1c5-4b31-b5eb-a313baa44b5e"
                        },
                        new
                        {
                            ImageId = new Guid("bfbf38c4-5645-4392-9020-6c5b992ff46e"),
                            CarId = new Guid("06ed14a0-a17e-48d8-868f-33cf5ce916aa"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar85.jpg?alt=media&token=8ab32d35-6b26-4fb7-8a5a-4e013161a768"
                        },
                        new
                        {
                            ImageId = new Guid("8df59a4b-c2fe-4023-8a1e-7f308c8f68b8"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar91.jpg?alt=media&token=466bda06-2bf1-493f-9dd5-eee4ce0a94ab"
                        },
                        new
                        {
                            ImageId = new Guid("d539cbdb-a20c-4fd9-ac69-21fcb067249b"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar92.jpg?alt=media&token=fc46713e-0c32-486c-9c6c-546318f09d9d"
                        },
                        new
                        {
                            ImageId = new Guid("a870408e-435b-4448-bb23-93bf329e40d5"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar93.jpg?alt=media&token=782b1c2f-49d2-4673-8101-330020231a01"
                        },
                        new
                        {
                            ImageId = new Guid("ec97accb-b58d-4677-b6c5-4c87e3441de9"),
                            CarId = new Guid("d2da81d0-8f87-43cb-9dba-1a0903c1871a"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar94.jpg?alt=media&token=94d25ed1-c76b-4edf-be53-0fe909ec5307"
                        },
                        new
                        {
                            ImageId = new Guid("63d8419b-ae3c-4867-96e2-2773531291d3"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar101.jpg?alt=media&token=77127151-3472-4206-8540-6909ec874c71"
                        },
                        new
                        {
                            ImageId = new Guid("f0e7a8c5-16e7-4a32-bf1d-3cadafaf7153"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar102.jpg?alt=media&token=46f90372-9790-43f5-ae41-6f35c7961660"
                        },
                        new
                        {
                            ImageId = new Guid("fb35d1d2-5ff3-4016-86f0-df5d5657c736"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar103.jpg?alt=media&token=b9e6ed3c-1328-4935-9eab-d3335638e503"
                        },
                        new
                        {
                            ImageId = new Guid("8dd7c100-ccf9-4e7b-a2e6-aa3525698243"),
                            CarId = new Guid("35fa8298-81a2-4ddd-9312-0876455bf402"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Url = "https://firebasestorage.googleapis.com/v0/b/diamoondb-1412.appspot.com/o/Cars%2FCar%20ex%2Fcar104.jpg?alt=media&token=9688114d-001b-4f26-a5d8-562d9fb42bf7"
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Model", b =>
                {
                    b.Property<Guid>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ModelId");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            ModelId = new Guid("0ed1b055-dcd4-48ee-aeff-7478382f9e96"),
                            BrandId = new Guid("c6669c8e-f8a8-443c-8446-83c010b44ec0"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "CX5 Deluxe",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("f660d2b0-0444-4c02-b15a-2ebc871d8f4b"),
                            BrandId = new Guid("a1f14e7e-342b-4f17-b7fc-9e7ca13483b2"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "VF6 Plus",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("4e39763c-501a-47ea-9d11-f884de1e7e4e"),
                            BrandId = new Guid("de716878-747e-4b02-9fce-46d67a13c30f"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "3008",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("1dc0a8e3-19b1-45f0-aec8-a810722de8f5"),
                            BrandId = new Guid("9bb29e7a-ca23-4418-81d4-b9b66e7cf107"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "Ecosport",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("32234d9d-90f2-4011-ba7f-85ead67a98bd"),
                            BrandId = new Guid("1c38dc33-e4d6-4922-abc4-1fa8cfc314b2"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "RX450H",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("fdfdef71-0e39-48f0-8eec-71f5429ed285"),
                            BrandId = new Guid("c11c6f51-c207-4754-9372-046fb4a04c22"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "Creta",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("16fd3123-d971-422c-b2af-e47978c27f35"),
                            BrandId = new Guid("c11c6f51-c207-4754-9372-046fb4a04c22"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "Tucson Premium",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("affeb1d2-7eb3-4410-a7ca-e3b1adc3cc54"),
                            BrandId = new Guid("de716878-747e-4b02-9fce-46d67a13c30f"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "2008 GT",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("542d93fd-4bc2-48df-9e58-f12c17a96d79"),
                            BrandId = new Guid("b802da6e-e178-46f5-9884-442e0f1067dc"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "ZS Standard",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ModelId = new Guid("6e18d51e-2964-4f16-a00c-0d4544671816"),
                            BrandId = new Guid("4e5784bd-10a3-4fb4-ad50-fb0304da90d9"),
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelName = "Innova",
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RentalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PaymentId");

                    b.HasIndex("RentalId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Rental", b =>
                {
                    b.Property<Guid>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DepositAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InsuranceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PickupLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RemainAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RentalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RentalStatus")
                        .HasColumnType("int");

                    b.Property<string>("ReturnLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RentalId");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Review", b =>
                {
                    b.Property<Guid>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Author")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Flag")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("RentalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReviewId");

                    b.HasIndex("Author");

                    b.HasIndex("CarId");

                    b.HasIndex("RentalId")
                        .IsUnique();

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Identity.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("322488f9-7aa9-49b0-b2b8-fd98b7b260fc"),
                            DisplayName = "Khách Hàng",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        },
                        new
                        {
                            Id = new Guid("c0278115-8549-4fad-890a-44f8e8fcc022"),
                            DisplayName = "Quản Lí",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = new Guid("ab8e4032-2d95-45cc-89c1-c039e9e8bc39"),
                            DisplayName = "Chủ Xe",
                            Name = "Owner",
                            NormalizedName = "CarOwener"
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Identity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VipExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VipStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("277ea066-d041-40ff-9dae-6271dbd6fd87"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "04d894c5-aed1-4254-9804-6e286238e3ad",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quocdai@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Nguyen Quoc Dai",
                            LockoutEnabled = false,
                            NormalizedEmail = "QUOCDAI@GMAIL.COM",
                            NormalizedUserName = "DAINQ115",
                            PasswordHash = "AQAAAAIAAYagAAAAEAm9LNRefx3lF9q793VIbPobXxPhvqCt9p0KLaZGCNYJnezd2Y/b7wSbDR4DG1WFVw==",
                            PhoneNumber = "0932748924",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b10e2921-7998-4bf7-90ec-2409117625c2",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "dainq115"
                        },
                        new
                        {
                            Id = new Guid("9d7e87a9-b070-4607-a0b0-2d2322aece9b"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "037c78e9-f6e6-44e5-ba85-a2231aea0610",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "toanvan@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Van Huu Toan",
                            LockoutEnabled = false,
                            NormalizedEmail = "TOANVAN@GMAIL.COM",
                            NormalizedUserName = "VIPRO123",
                            PasswordHash = "AQAAAAIAAYagAAAAEKXQKY6F01H6sKJg3HGvMyXIBWaV7KC2NOUo7znvqJpwdbflGnE7bOGfl2lqTtOo5A==",
                            PhoneNumber = "0999998888",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b9daff54-d3fa-43e0-abaf-fdf911642f69",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "vipro123"
                        },
                        new
                        {
                            Id = new Guid("0075ba2c-f60d-4f75-b9f1-f71579bc4fd2"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c36aa486-e832-4df2-a00f-4c764937feea",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khanhpham@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Nguyen Pham Khanh",
                            LockoutEnabled = false,
                            NormalizedEmail = "KHANHPHAM@GMAIL.COM",
                            NormalizedUserName = "KUEM113",
                            PasswordHash = "AQAAAAIAAYagAAAAEOmuwXGmZtNSh7i/aogory9fVhJluD9h1dgJYe8thwsxeO3O6eCqLjp80tYcAw0o5w==",
                            PhoneNumber = "0969998878",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "319c549f-a491-4d5e-aa0e-cb45db91dd49",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "kuem113"
                        },
                        new
                        {
                            Id = new Guid("3b1a8845-765f-4d91-984a-4e8a9d7d376e"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e6534a4a-bec3-4016-b400-eb291c39d48a",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khaitoi@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Phan Van Khai",
                            LockoutEnabled = false,
                            NormalizedEmail = "KHAITOI@GMAIL.COM",
                            NormalizedUserName = "XAUTRAI123",
                            PasswordHash = "AQAAAAIAAYagAAAAEF2MTn51Px89XGJvK+VoxIfAHTTjeFdlnbMSL1o1uVezpyOYHoZ/oUUKc5aP1uhAiA==",
                            PhoneNumber = "0777444499",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5267aeaa-c000-4ed5-ad20-0e6a35ca0c25",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "xautrai123"
                        },
                        new
                        {
                            Id = new Guid("4565f47a-7239-4666-b9b4-0523b1d9ba3d"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4506606a-7302-4177-8366-1a84268cf818",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quangdalat@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Quang La Tui",
                            LockoutEnabled = false,
                            NormalizedEmail = "QUANGDALAT@GMAIL.COM",
                            NormalizedUserName = "QUANGSPA009",
                            PasswordHash = "AQAAAAIAAYagAAAAEASFHKkAksp8JpBrs8vDmSn0cKhnVtVL0/1L76+/y24gxKu0EFMS7eU7Qlv0UEcHiA==",
                            PhoneNumber = "0999777712",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cbaa09a9-b8b8-44fe-a00d-8c91f264bef8",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "quangspa09"
                        },
                        new
                        {
                            Id = new Guid("1246b8e5-af73-4aa3-bdef-b8815e21a78b"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f22bd920-7531-4d29-80f4-ba91ed286f23",
                            CreatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "duythunglungtinhiu@gmail.com",
                            EmailConfirmed = true,
                            FullName = "Pham Hoai Duy",
                            LockoutEnabled = false,
                            NormalizedEmail = "DUYTHUNGLUNGTINHIU",
                            NormalizedUserName = "DUYPRO113",
                            PasswordHash = "AQAAAAIAAYagAAAAEFoxiOl8twzDIKzhb6hvPe8utS13I0ZfJa/ZRBAR3NVpCj9nDtFFO9FQna/srECQ2Q==",
                            PhoneNumber = "0555666612",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "66314d69-42ba-4089-bc5a-27706627eab0",
                            Status = true,
                            TwoFactorEnabled = false,
                            UpdatedAt = new DateTime(2024, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "duypro113"
                        });
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Address", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Car", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.CarType", "CarType")
                        .WithMany("Cars")
                        .HasForeignKey("CarTypeId");

                    b.HasOne("MocatiCar.Core.Domain.Content.Model", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "User")
                        .WithMany("Cars")
                        .HasForeignKey("OwnerId");

                    b.Navigation("CarType");

                    b.Navigation("Model");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CarFeature", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("CarFeatures")
                        .HasForeignKey("CarId");

                    b.HasOne("MocatiCar.Core.Domain.Content.Feature", "Feature")
                        .WithMany()
                        .HasForeignKey("FeatureId");

                    b.Navigation("Car");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Contract", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Rental", "Rental")
                        .WithMany("Contracts")
                        .HasForeignKey("RentalId");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.FavoriteCar", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("FavoriteCars")
                        .HasForeignKey("CarId");

                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "User")
                        .WithMany("FavoriteCars")
                        .HasForeignKey("UserId");

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Image", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("Images")
                        .HasForeignKey("CarId");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Model", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Payment", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Rental", "Rental")
                        .WithMany("Payments")
                        .HasForeignKey("RentalId");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Rental", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("Rentals")
                        .HasForeignKey("CarId");

                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "Customer")
                        .WithMany("CustomerRentals")
                        .HasForeignKey("CustomerId");

                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "Owner")
                        .WithMany("OwnerRentals")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Car");

                    b.Navigation("Customer");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Review", b =>
                {
                    b.HasOne("MocatiCar.Core.Domain.Identity.AppUser", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("Author");

                    b.HasOne("MocatiCar.Core.Domain.Content.Car", "Car")
                        .WithMany("Reviews")
                        .HasForeignKey("CarId");

                    b.HasOne("MocatiCar.Core.Domain.Content.Rental", "Rental")
                        .WithOne("Review")
                        .HasForeignKey("MocatiCar.Core.Domain.Content.Review", "RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Rental");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Car", b =>
                {
                    b.Navigation("CarFeatures");

                    b.Navigation("FavoriteCars");

                    b.Navigation("Images");

                    b.Navigation("Rentals");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.CarType", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Model", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Content.Rental", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Payments");

                    b.Navigation("Review")
                        .IsRequired();
                });

            modelBuilder.Entity("MocatiCar.Core.Domain.Identity.AppUser", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Cars");

                    b.Navigation("CustomerRentals");

                    b.Navigation("FavoriteCars");

                    b.Navigation("OwnerRentals");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
